/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1554.0, "series": [{"data": [[0.0, 0.0], [0.1, 3.0], [0.2, 5.0], [0.3, 6.0], [0.4, 8.0], [0.5, 9.0], [0.6, 10.0], [0.7, 11.0], [0.8, 12.0], [0.9, 13.0], [1.0, 14.0], [1.1, 15.0], [1.2, 16.0], [1.3, 16.0], [1.4, 17.0], [1.5, 17.0], [1.6, 17.0], [1.7, 18.0], [1.8, 18.0], [1.9, 18.0], [2.0, 18.0], [2.1, 18.0], [2.2, 18.0], [2.3, 19.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 19.0], [2.8, 19.0], [2.9, 19.0], [3.0, 20.0], [3.1, 20.0], [3.2, 20.0], [3.3, 20.0], [3.4, 20.0], [3.5, 20.0], [3.6, 20.0], [3.7, 20.0], [3.8, 20.0], [3.9, 20.0], [4.0, 21.0], [4.1, 21.0], [4.2, 21.0], [4.3, 21.0], [4.4, 21.0], [4.5, 21.0], [4.6, 21.0], [4.7, 21.0], [4.8, 21.0], [4.9, 21.0], [5.0, 21.0], [5.1, 21.0], [5.2, 22.0], [5.3, 22.0], [5.4, 22.0], [5.5, 22.0], [5.6, 22.0], [5.7, 22.0], [5.8, 22.0], [5.9, 22.0], [6.0, 22.0], [6.1, 22.0], [6.2, 22.0], [6.3, 22.0], [6.4, 23.0], [6.5, 23.0], [6.6, 23.0], [6.7, 23.0], [6.8, 23.0], [6.9, 23.0], [7.0, 23.0], [7.1, 23.0], [7.2, 23.0], [7.3, 23.0], [7.4, 23.0], [7.5, 23.0], [7.6, 23.0], [7.7, 24.0], [7.8, 24.0], [7.9, 24.0], [8.0, 24.0], [8.1, 24.0], [8.2, 24.0], [8.3, 24.0], [8.4, 24.0], [8.5, 24.0], [8.6, 24.0], [8.7, 24.0], [8.8, 25.0], [8.9, 25.0], [9.0, 25.0], [9.1, 25.0], [9.2, 25.0], [9.3, 25.0], [9.4, 25.0], [9.5, 25.0], [9.6, 25.0], [9.7, 25.0], [9.8, 26.0], [9.9, 26.0], [10.0, 26.0], [10.1, 26.0], [10.2, 26.0], [10.3, 26.0], [10.4, 26.0], [10.5, 26.0], [10.6, 26.0], [10.7, 26.0], [10.8, 27.0], [10.9, 27.0], [11.0, 27.0], [11.1, 27.0], [11.2, 27.0], [11.3, 27.0], [11.4, 27.0], [11.5, 27.0], [11.6, 27.0], [11.7, 27.0], [11.8, 28.0], [11.9, 28.0], [12.0, 28.0], [12.1, 28.0], [12.2, 28.0], [12.3, 28.0], [12.4, 28.0], [12.5, 28.0], [12.6, 28.0], [12.7, 29.0], [12.8, 29.0], [12.9, 29.0], [13.0, 29.0], [13.1, 29.0], [13.2, 29.0], [13.3, 29.0], [13.4, 30.0], [13.5, 30.0], [13.6, 30.0], [13.7, 30.0], [13.8, 30.0], [13.9, 30.0], [14.0, 30.0], [14.1, 31.0], [14.2, 31.0], [14.3, 31.0], [14.4, 31.0], [14.5, 31.0], [14.6, 31.0], [14.7, 31.0], [14.8, 32.0], [14.9, 32.0], [15.0, 32.0], [15.1, 32.0], [15.2, 32.0], [15.3, 32.0], [15.4, 33.0], [15.5, 33.0], [15.6, 33.0], [15.7, 33.0], [15.8, 33.0], [15.9, 33.0], [16.0, 33.0], [16.1, 34.0], [16.2, 34.0], [16.3, 34.0], [16.4, 34.0], [16.5, 34.0], [16.6, 35.0], [16.7, 35.0], [16.8, 35.0], [16.9, 35.0], [17.0, 35.0], [17.1, 36.0], [17.2, 36.0], [17.3, 36.0], [17.4, 37.0], [17.5, 37.0], [17.6, 37.0], [17.7, 37.0], [17.8, 38.0], [17.9, 38.0], [18.0, 38.0], [18.1, 39.0], [18.2, 39.0], [18.3, 39.0], [18.4, 39.0], [18.5, 40.0], [18.6, 40.0], [18.7, 40.0], [18.8, 41.0], [18.9, 41.0], [19.0, 41.0], [19.1, 42.0], [19.2, 42.0], [19.3, 42.0], [19.4, 43.0], [19.5, 43.0], [19.6, 44.0], [19.7, 44.0], [19.8, 45.0], [19.9, 45.0], [20.0, 46.0], [20.1, 46.0], [20.2, 47.0], [20.3, 47.0], [20.4, 48.0], [20.5, 48.0], [20.6, 49.0], [20.7, 49.0], [20.8, 50.0], [20.9, 50.0], [21.0, 51.0], [21.1, 51.0], [21.2, 52.0], [21.3, 53.0], [21.4, 54.0], [21.5, 54.0], [21.6, 55.0], [21.7, 56.0], [21.8, 57.0], [21.9, 58.0], [22.0, 60.0], [22.1, 61.0], [22.2, 61.0], [22.3, 63.0], [22.4, 64.0], [22.5, 65.0], [22.6, 67.0], [22.7, 69.0], [22.8, 70.0], [22.9, 72.0], [23.0, 74.0], [23.1, 77.0], [23.2, 80.0], [23.3, 85.0], [23.4, 89.0], [23.5, 96.0], [23.6, 105.0], [23.7, 124.0], [23.8, 147.0], [23.9, 234.0], [24.0, 508.0], [24.1, 514.0], [24.2, 518.0], [24.3, 519.0], [24.4, 520.0], [24.5, 521.0], [24.6, 521.0], [24.7, 522.0], [24.8, 522.0], [24.9, 523.0], [25.0, 523.0], [25.1, 523.0], [25.2, 524.0], [25.3, 524.0], [25.4, 524.0], [25.5, 525.0], [25.6, 525.0], [25.7, 526.0], [25.8, 526.0], [25.9, 526.0], [26.0, 527.0], [26.1, 527.0], [26.2, 528.0], [26.3, 528.0], [26.4, 529.0], [26.5, 529.0], [26.6, 530.0], [26.7, 530.0], [26.8, 531.0], [26.9, 531.0], [27.0, 532.0], [27.1, 532.0], [27.2, 533.0], [27.3, 533.0], [27.4, 534.0], [27.5, 534.0], [27.6, 535.0], [27.7, 536.0], [27.8, 537.0], [27.9, 538.0], [28.0, 539.0], [28.1, 540.0], [28.2, 541.0], [28.3, 542.0], [28.4, 543.0], [28.5, 544.0], [28.6, 545.0], [28.7, 546.0], [28.8, 547.0], [28.9, 549.0], [29.0, 550.0], [29.1, 552.0], [29.2, 554.0], [29.3, 556.0], [29.4, 558.0], [29.5, 559.0], [29.6, 562.0], [29.7, 563.0], [29.8, 565.0], [29.9, 568.0], [30.0, 570.0], [30.1, 572.0], [30.2, 574.0], [30.3, 576.0], [30.4, 578.0], [30.5, 580.0], [30.6, 583.0], [30.7, 585.0], [30.8, 587.0], [30.9, 589.0], [31.0, 591.0], [31.1, 593.0], [31.2, 595.0], [31.3, 596.0], [31.4, 598.0], [31.5, 599.0], [31.6, 602.0], [31.7, 603.0], [31.8, 605.0], [31.9, 606.0], [32.0, 608.0], [32.1, 609.0], [32.2, 611.0], [32.3, 612.0], [32.4, 614.0], [32.5, 615.0], [32.6, 616.0], [32.7, 618.0], [32.8, 619.0], [32.9, 620.0], [33.0, 621.0], [33.1, 622.0], [33.2, 624.0], [33.3, 625.0], [33.4, 626.0], [33.5, 627.0], [33.6, 628.0], [33.7, 629.0], [33.8, 630.0], [33.9, 631.0], [34.0, 632.0], [34.1, 633.0], [34.2, 635.0], [34.3, 636.0], [34.4, 636.0], [34.5, 637.0], [34.6, 639.0], [34.7, 640.0], [34.8, 641.0], [34.9, 642.0], [35.0, 643.0], [35.1, 644.0], [35.2, 645.0], [35.3, 646.0], [35.4, 647.0], [35.5, 649.0], [35.6, 650.0], [35.7, 651.0], [35.8, 653.0], [35.9, 655.0], [36.0, 656.0], [36.1, 658.0], [36.2, 660.0], [36.3, 662.0], [36.4, 664.0], [36.5, 665.0], [36.6, 667.0], [36.7, 670.0], [36.8, 672.0], [36.9, 675.0], [37.0, 677.0], [37.1, 680.0], [37.2, 682.0], [37.3, 685.0], [37.4, 688.0], [37.5, 691.0], [37.6, 694.0], [37.7, 699.0], [37.8, 703.0], [37.9, 709.0], [38.0, 713.0], [38.1, 718.0], [38.2, 723.0], [38.3, 728.0], [38.4, 732.0], [38.5, 736.0], [38.6, 741.0], [38.7, 747.0], [38.8, 753.0], [38.9, 759.0], [39.0, 768.0], [39.1, 775.0], [39.2, 785.0], [39.3, 807.0], [39.4, 822.0], [39.5, 842.0], [39.6, 884.0], [39.7, 1000.0], [39.8, 1000.0], [39.9, 1000.0], [40.0, 1000.0], [40.1, 1000.0], [40.2, 1000.0], [40.3, 1000.0], [40.4, 1000.0], [40.5, 1000.0], [40.6, 1000.0], [40.7, 1000.0], [40.8, 1000.0], [40.9, 1000.0], [41.0, 1000.0], [41.1, 1000.0], [41.2, 1000.0], [41.3, 1000.0], [41.4, 1000.0], [41.5, 1000.0], [41.6, 1000.0], [41.7, 1000.0], [41.8, 1000.0], [41.9, 1000.0], [42.0, 1000.0], [42.1, 1000.0], [42.2, 1000.0], [42.3, 1000.0], [42.4, 1000.0], [42.5, 1000.0], [42.6, 1000.0], [42.7, 1000.0], [42.8, 1000.0], [42.9, 1000.0], [43.0, 1000.0], [43.1, 1000.0], [43.2, 1000.0], [43.3, 1000.0], [43.4, 1000.0], [43.5, 1000.0], [43.6, 1000.0], [43.7, 1000.0], [43.8, 1000.0], [43.9, 1000.0], [44.0, 1000.0], [44.1, 1000.0], [44.2, 1000.0], [44.3, 1000.0], [44.4, 1000.0], [44.5, 1000.0], [44.6, 1000.0], [44.7, 1000.0], [44.8, 1000.0], [44.9, 1000.0], [45.0, 1000.0], [45.1, 1000.0], [45.2, 1000.0], [45.3, 1001.0], [45.4, 1001.0], [45.5, 1001.0], [45.6, 1001.0], [45.7, 1001.0], [45.8, 1001.0], [45.9, 1001.0], [46.0, 1001.0], [46.1, 1001.0], [46.2, 1001.0], [46.3, 1001.0], [46.4, 1001.0], [46.5, 1001.0], [46.6, 1001.0], [46.7, 1001.0], [46.8, 1001.0], [46.9, 1001.0], [47.0, 1001.0], [47.1, 1001.0], [47.2, 1001.0], [47.3, 1001.0], [47.4, 1001.0], [47.5, 1001.0], [47.6, 1001.0], [47.7, 1001.0], [47.8, 1001.0], [47.9, 1001.0], [48.0, 1001.0], [48.1, 1001.0], [48.2, 1001.0], [48.3, 1001.0], [48.4, 1001.0], [48.5, 1001.0], [48.6, 1001.0], [48.7, 1001.0], [48.8, 1001.0], [48.9, 1001.0], [49.0, 1001.0], [49.1, 1001.0], [49.2, 1001.0], [49.3, 1001.0], [49.4, 1001.0], [49.5, 1001.0], [49.6, 1001.0], [49.7, 1001.0], [49.8, 1001.0], [49.9, 1001.0], [50.0, 1001.0], [50.1, 1001.0], [50.2, 1001.0], [50.3, 1001.0], [50.4, 1001.0], [50.5, 1001.0], [50.6, 1001.0], [50.7, 1001.0], [50.8, 1001.0], [50.9, 1002.0], [51.0, 1002.0], [51.1, 1002.0], [51.2, 1002.0], [51.3, 1002.0], [51.4, 1002.0], [51.5, 1002.0], [51.6, 1002.0], [51.7, 1002.0], [51.8, 1002.0], [51.9, 1002.0], [52.0, 1002.0], [52.1, 1002.0], [52.2, 1002.0], [52.3, 1002.0], [52.4, 1002.0], [52.5, 1002.0], [52.6, 1002.0], [52.7, 1002.0], [52.8, 1002.0], [52.9, 1002.0], [53.0, 1002.0], [53.1, 1002.0], [53.2, 1002.0], [53.3, 1003.0], [53.4, 1003.0], [53.5, 1003.0], [53.6, 1003.0], [53.7, 1003.0], [53.8, 1003.0], [53.9, 1003.0], [54.0, 1003.0], [54.1, 1003.0], [54.2, 1003.0], [54.3, 1003.0], [54.4, 1003.0], [54.5, 1004.0], [54.6, 1004.0], [54.7, 1004.0], [54.8, 1004.0], [54.9, 1004.0], [55.0, 1004.0], [55.1, 1004.0], [55.2, 1005.0], [55.3, 1005.0], [55.4, 1005.0], [55.5, 1005.0], [55.6, 1005.0], [55.7, 1006.0], [55.8, 1006.0], [55.9, 1006.0], [56.0, 1007.0], [56.1, 1007.0], [56.2, 1008.0], [56.3, 1008.0], [56.4, 1009.0], [56.5, 1009.0], [56.6, 1010.0], [56.7, 1011.0], [56.8, 1011.0], [56.9, 1012.0], [57.0, 1013.0], [57.1, 1013.0], [57.2, 1014.0], [57.3, 1015.0], [57.4, 1015.0], [57.5, 1016.0], [57.6, 1017.0], [57.7, 1017.0], [57.8, 1018.0], [57.9, 1019.0], [58.0, 1020.0], [58.1, 1020.0], [58.2, 1021.0], [58.3, 1021.0], [58.4, 1022.0], [58.5, 1022.0], [58.6, 1023.0], [58.7, 1023.0], [58.8, 1024.0], [58.9, 1024.0], [59.0, 1025.0], [59.1, 1025.0], [59.2, 1026.0], [59.3, 1026.0], [59.4, 1027.0], [59.5, 1028.0], [59.6, 1028.0], [59.7, 1029.0], [59.8, 1029.0], [59.9, 1030.0], [60.0, 1030.0], [60.1, 1031.0], [60.2, 1032.0], [60.3, 1032.0], [60.4, 1033.0], [60.5, 1033.0], [60.6, 1034.0], [60.7, 1035.0], [60.8, 1035.0], [60.9, 1036.0], [61.0, 1037.0], [61.1, 1037.0], [61.2, 1038.0], [61.3, 1039.0], [61.4, 1040.0], [61.5, 1041.0], [61.6, 1042.0], [61.7, 1043.0], [61.8, 1043.0], [61.9, 1045.0], [62.0, 1046.0], [62.1, 1047.0], [62.2, 1049.0], [62.3, 1050.0], [62.4, 1051.0], [62.5, 1053.0], [62.6, 1054.0], [62.7, 1055.0], [62.8, 1056.0], [62.9, 1057.0], [63.0, 1059.0], [63.1, 1060.0], [63.2, 1061.0], [63.3, 1062.0], [63.4, 1064.0], [63.5, 1065.0], [63.6, 1066.0], [63.7, 1068.0], [63.8, 1069.0], [63.9, 1071.0], [64.0, 1072.0], [64.1, 1073.0], [64.2, 1074.0], [64.3, 1075.0], [64.4, 1076.0], [64.5, 1078.0], [64.6, 1079.0], [64.7, 1080.0], [64.8, 1081.0], [64.9, 1082.0], [65.0, 1083.0], [65.1, 1083.0], [65.2, 1084.0], [65.3, 1085.0], [65.4, 1085.0], [65.5, 1086.0], [65.6, 1087.0], [65.7, 1087.0], [65.8, 1088.0], [65.9, 1089.0], [66.0, 1089.0], [66.1, 1090.0], [66.2, 1090.0], [66.3, 1091.0], [66.4, 1092.0], [66.5, 1092.0], [66.6, 1093.0], [66.7, 1093.0], [66.8, 1094.0], [66.9, 1094.0], [67.0, 1095.0], [67.1, 1095.0], [67.2, 1096.0], [67.3, 1096.0], [67.4, 1097.0], [67.5, 1097.0], [67.6, 1097.0], [67.7, 1098.0], [67.8, 1098.0], [67.9, 1099.0], [68.0, 1099.0], [68.1, 1099.0], [68.2, 1100.0], [68.3, 1100.0], [68.4, 1100.0], [68.5, 1101.0], [68.6, 1101.0], [68.7, 1101.0], [68.8, 1102.0], [68.9, 1102.0], [69.0, 1103.0], [69.1, 1103.0], [69.2, 1103.0], [69.3, 1104.0], [69.4, 1104.0], [69.5, 1104.0], [69.6, 1105.0], [69.7, 1105.0], [69.8, 1105.0], [69.9, 1106.0], [70.0, 1106.0], [70.1, 1107.0], [70.2, 1107.0], [70.3, 1107.0], [70.4, 1108.0], [70.5, 1108.0], [70.6, 1108.0], [70.7, 1109.0], [70.8, 1109.0], [70.9, 1110.0], [71.0, 1110.0], [71.1, 1111.0], [71.2, 1111.0], [71.3, 1111.0], [71.4, 1112.0], [71.5, 1112.0], [71.6, 1112.0], [71.7, 1113.0], [71.8, 1113.0], [71.9, 1114.0], [72.0, 1114.0], [72.1, 1114.0], [72.2, 1115.0], [72.3, 1115.0], [72.4, 1116.0], [72.5, 1116.0], [72.6, 1117.0], [72.7, 1117.0], [72.8, 1118.0], [72.9, 1119.0], [73.0, 1119.0], [73.1, 1120.0], [73.2, 1120.0], [73.3, 1121.0], [73.4, 1122.0], [73.5, 1122.0], [73.6, 1123.0], [73.7, 1123.0], [73.8, 1124.0], [73.9, 1125.0], [74.0, 1125.0], [74.1, 1126.0], [74.2, 1127.0], [74.3, 1128.0], [74.4, 1129.0], [74.5, 1129.0], [74.6, 1130.0], [74.7, 1131.0], [74.8, 1132.0], [74.9, 1133.0], [75.0, 1133.0], [75.1, 1134.0], [75.2, 1135.0], [75.3, 1135.0], [75.4, 1136.0], [75.5, 1137.0], [75.6, 1138.0], [75.7, 1139.0], [75.8, 1140.0], [75.9, 1140.0], [76.0, 1141.0], [76.1, 1142.0], [76.2, 1143.0], [76.3, 1144.0], [76.4, 1145.0], [76.5, 1146.0], [76.6, 1147.0], [76.7, 1148.0], [76.8, 1149.0], [76.9, 1150.0], [77.0, 1151.0], [77.1, 1152.0], [77.2, 1152.0], [77.3, 1153.0], [77.4, 1154.0], [77.5, 1155.0], [77.6, 1156.0], [77.7, 1157.0], [77.8, 1157.0], [77.9, 1158.0], [78.0, 1159.0], [78.1, 1160.0], [78.2, 1161.0], [78.3, 1161.0], [78.4, 1162.0], [78.5, 1163.0], [78.6, 1164.0], [78.7, 1164.0], [78.8, 1165.0], [78.9, 1166.0], [79.0, 1166.0], [79.1, 1167.0], [79.2, 1168.0], [79.3, 1169.0], [79.4, 1170.0], [79.5, 1170.0], [79.6, 1171.0], [79.7, 1172.0], [79.8, 1173.0], [79.9, 1173.0], [80.0, 1174.0], [80.1, 1174.0], [80.2, 1175.0], [80.3, 1176.0], [80.4, 1176.0], [80.5, 1177.0], [80.6, 1177.0], [80.7, 1178.0], [80.8, 1178.0], [80.9, 1179.0], [81.0, 1179.0], [81.1, 1180.0], [81.2, 1180.0], [81.3, 1181.0], [81.4, 1181.0], [81.5, 1182.0], [81.6, 1182.0], [81.7, 1182.0], [81.8, 1183.0], [81.9, 1183.0], [82.0, 1183.0], [82.1, 1184.0], [82.2, 1184.0], [82.3, 1184.0], [82.4, 1185.0], [82.5, 1185.0], [82.6, 1185.0], [82.7, 1186.0], [82.8, 1186.0], [82.9, 1187.0], [83.0, 1187.0], [83.1, 1187.0], [83.2, 1188.0], [83.3, 1188.0], [83.4, 1188.0], [83.5, 1189.0], [83.6, 1189.0], [83.7, 1189.0], [83.8, 1190.0], [83.9, 1190.0], [84.0, 1190.0], [84.1, 1191.0], [84.2, 1191.0], [84.3, 1191.0], [84.4, 1192.0], [84.5, 1192.0], [84.6, 1192.0], [84.7, 1193.0], [84.8, 1193.0], [84.9, 1193.0], [85.0, 1194.0], [85.1, 1194.0], [85.2, 1194.0], [85.3, 1195.0], [85.4, 1195.0], [85.5, 1195.0], [85.6, 1195.0], [85.7, 1196.0], [85.8, 1196.0], [85.9, 1196.0], [86.0, 1196.0], [86.1, 1197.0], [86.2, 1197.0], [86.3, 1197.0], [86.4, 1197.0], [86.5, 1198.0], [86.6, 1198.0], [86.7, 1198.0], [86.8, 1198.0], [86.9, 1198.0], [87.0, 1199.0], [87.1, 1199.0], [87.2, 1199.0], [87.3, 1199.0], [87.4, 1200.0], [87.5, 1200.0], [87.6, 1200.0], [87.7, 1200.0], [87.8, 1200.0], [87.9, 1201.0], [88.0, 1201.0], [88.1, 1201.0], [88.2, 1201.0], [88.3, 1202.0], [88.4, 1202.0], [88.5, 1202.0], [88.6, 1203.0], [88.7, 1203.0], [88.8, 1203.0], [88.9, 1204.0], [89.0, 1204.0], [89.1, 1205.0], [89.2, 1205.0], [89.3, 1206.0], [89.4, 1206.0], [89.5, 1207.0], [89.6, 1207.0], [89.7, 1208.0], [89.8, 1208.0], [89.9, 1209.0], [90.0, 1209.0], [90.1, 1210.0], [90.2, 1210.0], [90.3, 1211.0], [90.4, 1212.0], [90.5, 1213.0], [90.6, 1213.0], [90.7, 1214.0], [90.8, 1215.0], [90.9, 1216.0], [91.0, 1217.0], [91.1, 1218.0], [91.2, 1219.0], [91.3, 1220.0], [91.4, 1221.0], [91.5, 1222.0], [91.6, 1223.0], [91.7, 1225.0], [91.8, 1226.0], [91.9, 1227.0], [92.0, 1228.0], [92.1, 1229.0], [92.2, 1231.0], [92.3, 1232.0], [92.4, 1234.0], [92.5, 1235.0], [92.6, 1237.0], [92.7, 1238.0], [92.8, 1239.0], [92.9, 1241.0], [93.0, 1242.0], [93.1, 1243.0], [93.2, 1245.0], [93.3, 1247.0], [93.4, 1248.0], [93.5, 1250.0], [93.6, 1251.0], [93.7, 1253.0], [93.8, 1254.0], [93.9, 1256.0], [94.0, 1257.0], [94.1, 1259.0], [94.2, 1260.0], [94.3, 1262.0], [94.4, 1263.0], [94.5, 1264.0], [94.6, 1266.0], [94.7, 1268.0], [94.8, 1269.0], [94.9, 1271.0], [95.0, 1272.0], [95.1, 1274.0], [95.2, 1275.0], [95.3, 1277.0], [95.4, 1279.0], [95.5, 1280.0], [95.6, 1282.0], [95.7, 1283.0], [95.8, 1284.0], [95.9, 1285.0], [96.0, 1286.0], [96.1, 1287.0], [96.2, 1288.0], [96.3, 1290.0], [96.4, 1291.0], [96.5, 1292.0], [96.6, 1292.0], [96.7, 1293.0], [96.8, 1294.0], [96.9, 1296.0], [97.0, 1296.0], [97.1, 1297.0], [97.2, 1298.0], [97.3, 1299.0], [97.4, 1300.0], [97.5, 1302.0], [97.6, 1303.0], [97.7, 1304.0], [97.8, 1307.0], [97.9, 1309.0], [98.0, 1311.0], [98.1, 1314.0], [98.2, 1318.0], [98.3, 1321.0], [98.4, 1325.0], [98.5, 1329.0], [98.6, 1335.0], [98.7, 1340.0], [98.8, 1345.0], [98.9, 1351.0], [99.0, 1359.0], [99.1, 1366.0], [99.2, 1370.0], [99.3, 1376.0], [99.4, 1382.0], [99.5, 1391.0], [99.6, 1400.0], [99.7, 1406.0], [99.8, 1423.0], [99.9, 1463.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 17108.0, "series": [{"data": [[0.0, 14132.0], [600.0, 3721.0], [700.0, 937.0], [200.0, 9.0], [800.0, 198.0], [900.0, 11.0], [1000.0, 17108.0], [1100.0, 11556.0], [1200.0, 5948.0], [1300.0, 1372.0], [1400.0, 215.0], [1500.0, 27.0], [100.0, 202.0], [500.0, 4564.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 30534.0, "series": [{"data": [[0.0, 14343.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 15097.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 26.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 30534.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1096.371374064472, "minX": 1.571217E12, "maxY": 1766.4268271102385, "series": [{"data": [[1.57121706E12, 1766.4268271102385], [1.571217E12, 1096.371374064472]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57121706E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 1242.0, "series": [{"data": [[2.0, 1.5], [3.0, 2.0], [4.0, 2.7857142857142856], [5.0, 337.66666666666663], [6.0, 628.25], [7.0, 502.0], [8.0, 1.2], [9.0, 2.0], [10.0, 3.0], [11.0, 5.0], [12.0, 4.0], [13.0, 505.0], [14.0, 503.0], [15.0, 602.2], [16.0, 1.0], [17.0, 4.0], [18.0, 3.5], [19.0, 6.0], [20.0, 7.0], [21.0, 7.0], [22.0, 6.75], [23.0, 8.0], [24.0, 7.5], [25.0, 8.0], [26.0, 9.0], [27.0, 11.5], [28.0, 11.833333333333334], [29.0, 12.333333333333334], [30.0, 13.0], [31.0, 14.0], [33.0, 13.666666666666666], [32.0, 13.0], [35.0, 19.176470588235293], [34.0, 15.0], [37.0, 22.0], [36.0, 21.333333333333332], [39.0, 23.5], [38.0, 23.0], [41.0, 273.75], [40.0, 404.0], [43.0, 23.0], [42.0, 23.0], [44.0, 80.11111111111109], [45.0, 398.5], [46.0, 276.75], [47.0, 338.6666666666667], [48.0, 430.22222222222223], [49.0, 339.625], [50.0, 290.5], [51.0, 148.52380952380952], [52.0, 9.11111111111111], [53.0, 11.333333333333334], [54.0, 24.304347826086957], [55.0, 4.5], [56.0, 25.428571428571427], [57.0, 6.0], [58.0, 35.5], [59.0, 27.5], [61.0, 505.7142857142857], [60.0, 6.75], [63.0, 1.0], [62.0, 703.8], [64.0, 25.4], [65.0, 33.5], [66.0, 55.0], [67.0, 42.0], [68.0, 44.63636363636363], [69.0, 50.5], [70.0, 33.0], [71.0, 46.5], [72.0, 67.25], [73.0, 372.0], [74.0, 130.6], [75.0, 438.8], [76.0, 190.53846153846158], [77.0, 53.74999999999999], [78.0, 21.0], [79.0, 29.333333333333336], [80.0, 39.3125], [81.0, 58.0], [82.0, 93.71428571428571], [83.0, 171.25], [87.0, 12.0], [86.0, 64.66666666666667], [85.0, 176.0], [84.0, 510.0], [88.0, 36.81818181818182], [89.0, 36.54545454545455], [90.0, 29.6], [91.0, 44.333333333333336], [92.0, 46.4], [93.0, 31.818181818181824], [94.0, 110.22222222222221], [95.0, 21.0], [96.0, 110.61538461538461], [97.0, 399.75000000000006], [99.0, 229.0], [98.0, 516.5], [100.0, 36.285714285714285], [101.0, 28.28571428571429], [102.0, 33.9], [103.0, 34.333333333333336], [104.0, 40.08333333333334], [105.0, 40.0], [106.0, 261.53846153846155], [107.0, 41.49999999999999], [108.0, 77.36363636363636], [109.0, 199.44444444444446], [110.0, 383.4285714285714], [111.0, 236.8], [112.0, 37.85714285714286], [113.0, 90.43478260869566], [115.0, 163.58823529411762], [114.0, 643.5], [116.0, 268.44444444444446], [117.0, 361.0666666666667], [118.0, 181.33333333333334], [119.0, 329.8181818181818], [120.0, 15.666666666666668], [121.0, 18.5], [122.0, 20.333333333333336], [123.0, 13.166666666666666], [124.0, 66.33333333333333], [125.0, 22.666666666666664], [126.0, 28.33333333333333], [127.0, 28.0], [132.0, 35.75], [133.0, 31.166666666666664], [134.0, 30.8235294117647], [135.0, 91.68181818181822], [131.0, 10.333333333333334], [130.0, 10.0], [129.0, 9.6], [128.0, 9.0], [136.0, 279.25], [137.0, 21.416666666666668], [139.0, 38.8], [140.0, 128.33333333333334], [141.0, 163.625], [142.0, 28.4], [143.0, 99.5], [138.0, 18.0], [144.0, 200.42857142857142], [145.0, 135.3846153846154], [146.0, 475.54545454545456], [151.0, 353.3333333333333], [150.0, 522.3333333333334], [149.0, 332.75], [148.0, 187.16666666666666], [147.0, 21.0], [157.0, 237.29268292682917], [159.0, 10.0], [158.0, 1.8], [156.0, 703.0], [155.0, 726.7777777777778], [154.0, 1000.75], [153.0, 738.5000000000001], [152.0, 521.8888888888889], [162.0, 24.5], [163.0, 20.8], [167.0, 97.875], [166.0, 13.0], [165.0, 13.5], [164.0, 11.0], [161.0, 6.6], [160.0, 3.25], [169.0, 20.0], [171.0, 44.63636363636364], [172.0, 47.42857142857142], [174.0, 70.33333333333333], [175.0, 94.5], [173.0, 20.0], [170.0, 17.0], [168.0, 15.0], [177.0, 70.33333333333333], [178.0, 46.0], [180.0, 427.4], [181.0, 99.2], [182.0, 555.0], [183.0, 856.3333333333334], [179.0, 526.0], [176.0, 22.0], [186.0, 529.0], [187.0, 532.8333333333334], [188.0, 199.5], [189.0, 543.125], [190.0, 205.44444444444446], [191.0, 114.75], [185.0, 644.6315789473683], [184.0, 1021.0], [192.0, 59.2], [193.0, 222.2], [194.0, 35.099999999999994], [195.0, 35.57142857142857], [196.0, 32.00000000000001], [197.0, 32.375], [198.0, 33.25], [199.0, 28.250000000000004], [200.0, 27.4], [201.0, 474.00000000000006], [202.0, 155.875], [203.0, 201.66666666666666], [204.0, 358.16666666666663], [205.0, 95.71428571428571], [206.0, 430.1], [207.0, 29.142857142857142], [208.0, 301.07692307692315], [209.0, 73.9], [210.0, 276.0], [211.0, 466.1428571428571], [212.0, 289.25], [213.0, 182.8], [214.0, 146.22222222222223], [215.0, 320.80769230769226], [216.0, 40.1904761904762], [217.0, 40.5], [218.0, 21.333333333333332], [219.0, 24.5], [220.0, 15.333333333333334], [221.0, 17.5], [222.0, 23.529411764705884], [223.0, 25.875], [224.0, 132.00000000000003], [225.0, 53.17647058823529], [226.0, 223.0], [227.0, 124.0], [228.0, 106.0], [229.0, 24.0], [230.0, 25.5], [231.0, 333.71428571428567], [232.0, 97.57142857142857], [233.0, 245.16666666666666], [234.0, 21.4], [235.0, 32.74999999999999], [236.0, 122.33333333333333], [237.0, 26.333333333333332], [238.0, 81.36842105263159], [239.0, 167.4], [244.0, 64.25], [245.0, 71.0], [247.0, 536.4285714285714], [246.0, 440.5], [243.0, 173.15384615384616], [242.0, 594.8571428571428], [241.0, 372.6], [240.0, 145.5], [248.0, 123.28571428571428], [249.0, 226.66666666666669], [250.0, 407.59999999999997], [251.0, 379.0], [252.0, 167.3], [253.0, 726.2500000000001], [254.0, 299.75], [255.0, 209.66666666666666], [257.0, 376.3333333333333], [256.0, 382.1111111111111], [258.0, 377.74999999999994], [259.0, 253.57142857142856], [260.0, 664.7777777777777], [261.0, 391.8], [262.0, 157.9090909090909], [263.0, 77.11111111111111], [264.0, 310.11764705882354], [270.0, 328.4], [271.0, 8.0], [268.0, 75.95], [269.0, 438.3333333333333], [265.0, 22.181818181818183], [266.0, 432.5], [267.0, 239.54166666666669], [273.0, 545.4857142857145], [274.0, 215.9], [275.0, 10.0], [284.0, 20.307692307692303], [285.0, 159.71428571428572], [286.0, 20.279999999999994], [287.0, 121.30000000000001], [276.0, 352.5], [277.0, 266.0], [278.0, 198.08333333333334], [279.0, 322.5999999999999], [272.0, 8.0], [280.0, 41.307692307692314], [281.0, 251.23076923076923], [282.0, 166.58823529411762], [283.0, 102.58333333333331], [289.0, 20.22222222222222], [288.0, 373.58823529411757], [290.0, 284.6842105263158], [291.0, 410.7777777777777], [292.0, 62.61538461538461], [293.0, 401.0], [294.0, 496.27777777777777], [295.0, 317.83333333333337], [296.0, 385.6842105263158], [302.0, 709.0], [303.0, 584.4285714285713], [300.0, 176.6923076923077], [301.0, 244.66666666666669], [297.0, 513.9375], [298.0, 437.0], [299.0, 188.88888888888889], [305.0, 14.875000000000002], [304.0, 24.6], [306.0, 31.625], [307.0, 31.0], [308.0, 137.89999999999998], [309.0, 5.666666666666666], [310.0, 26.299999999999997], [311.0, 21.333333333333332], [312.0, 46.72727272727272], [318.0, 563.5531914893618], [319.0, 593.0370370370372], [316.0, 32.25], [317.0, 358.0], [313.0, 31.055555555555564], [314.0, 403.3125], [315.0, 26.5], [322.0, 27.5], [320.0, 484.1428571428571], [321.0, 23.5], [323.0, 696.6923076923076], [332.0, 38.0], [333.0, 50.300000000000004], [335.0, 359.3333333333333], [328.0, 18.583333333333332], [334.0, 23.666666666666668], [324.0, 363.0], [325.0, 42.4], [327.0, 349.375], [326.0, 29.71428571428571], [329.0, 590.3333333333334], [330.0, 37.63636363636363], [331.0, 33.8], [337.0, 178.125], [336.0, 205.66666666666669], [338.0, 258.93333333333334], [339.0, 38.5], [340.0, 649.4761904761906], [341.0, 692.3333333333334], [342.0, 478.2], [343.0, 24.2], [344.0, 622.4285714285716], [350.0, 174.9], [351.0, 517.0909090909091], [348.0, 404.6666666666667], [349.0, 250.88888888888889], [345.0, 80.2], [346.0, 296.0], [347.0, 237.71428571428575], [353.0, 286.6666666666667], [352.0, 670.75], [354.0, 514.7], [355.0, 28.625], [356.0, 30.428571428571427], [357.0, 600.0], [358.0, 439.7222222222223], [359.0, 227.66666666666666], [360.0, 69.63157894736842], [365.0, 144.0], [364.0, 646.9375000000001], [366.0, 438.0], [367.0, 515.0], [361.0, 39.45454545454545], [363.0, 22.0], [362.0, 20.666666666666668], [369.0, 186.375], [368.0, 292.75], [370.0, 72.34782608695652], [371.0, 674.6666666666667], [372.0, 68.5], [373.0, 49.5], [374.0, 60.5], [375.0, 60.75], [377.0, 426.9090909090909], [376.0, 29.0], [382.0, 30.900000000000002], [383.0, 541.7586206896551], [380.0, 550.625], [381.0, 31.5], [378.0, 426.8888888888889], [379.0, 278.1111111111111], [385.0, 29.3], [384.0, 89.74999999999999], [386.0, 237.28571428571428], [387.0, 26.625], [388.0, 235.78571428571428], [389.0, 308.92857142857144], [390.0, 190.88888888888889], [391.0, 119.68750000000001], [392.0, 315.73684210526324], [398.0, 215.69230769230768], [399.0, 539.3181818181819], [396.0, 117.875], [397.0, 366.06249999999994], [393.0, 25.0], [394.0, 25.400000000000002], [395.0, 309.42857142857144], [401.0, 271.6], [400.0, 523.6470588235294], [402.0, 373.0], [403.0, 335.68750000000006], [404.0, 427.93333333333334], [405.0, 364.41666666666663], [406.0, 602.3846153846154], [407.0, 139.73076923076923], [408.0, 273.9166666666667], [414.0, 744.921052631579], [415.0, 539.3684210526316], [412.0, 246.07692307692307], [413.0, 727.52], [409.0, 188.91666666666669], [410.0, 354.8333333333333], [411.0, 61.46153846153846], [417.0, 523.0], [416.0, 753.9473684210527], [418.0, 689.8235294117648], [419.0, 427.4], [420.0, 308.7142857142857], [421.0, 428.81818181818187], [422.0, 389.72727272727275], [423.0, 454.5714285714286], [424.0, 425.2941176470588], [430.0, 544.4375], [431.0, 10.0], [428.0, 469.55555555555554], [429.0, 274.5], [425.0, 128.5], [426.0, 25.1], [427.0, 103.66666666666667], [434.0, 27.0], [432.0, 30.444444444444443], [433.0, 14.583333333333334], [435.0, 43.6], [444.0, 483.7777777777778], [445.0, 301.07692307692315], [446.0, 266.8], [447.0, 658.875], [436.0, 55.16666666666667], [437.0, 224.06249999999997], [438.0, 85.94117647058823], [439.0, 63.4], [440.0, 233.2727272727273], [441.0, 31.000000000000004], [442.0, 518.9166666666667], [443.0, 418.0], [449.0, 724.8604651162792], [448.0, 317.1428571428571], [450.0, 662.2173913043478], [451.0, 78.88888888888889], [452.0, 510.84], [453.0, 210.00000000000003], [454.0, 19.714285714285715], [455.0, 18.857142857142858], [456.0, 323.15384615384613], [462.0, 233.25], [463.0, 24.083333333333332], [460.0, 452.71428571428567], [461.0, 132.76923076923077], [457.0, 21.700000000000003], [458.0, 30.0], [459.0, 190.33333333333337], [465.0, 731.2962962962964], [464.0, 23.363636363636363], [466.0, 95.57142857142857], [467.0, 352.9333333333333], [468.0, 29.285714285714285], [469.0, 660.875], [470.0, 27.5], [471.0, 687.78125], [472.0, 29.5], [473.0, 18.0], [478.0, 124.3], [479.0, 317.6315789473684], [476.0, 100.25], [477.0, 458.8333333333335], [474.0, 37.5], [475.0, 91.25], [481.0, 502.1250000000001], [480.0, 406.4242424242425], [482.0, 799.4285714285713], [483.0, 546.4285714285713], [484.0, 528.4], [485.0, 794.0909090909091], [486.0, 441.0000000000001], [487.0, 536.6363636363636], [488.0, 298.6153846153845], [494.0, 144.70588235294122], [495.0, 527.3], [492.0, 28.0], [493.0, 23.714285714285715], [489.0, 341.5454545454546], [490.0, 669.6923076923076], [491.0, 105.74999999999999], [497.0, 136.22727272727275], [496.0, 58.42857142857143], [498.0, 222.10526315789474], [499.0, 121.8125], [500.0, 308.42857142857144], [501.0, 617.1], [502.0, 270.65], [503.0, 345.1764705882353], [504.0, 146.92307692307693], [510.0, 496.06666666666666], [511.0, 786.0], [508.0, 263.36842105263156], [509.0, 480.4545454545455], [505.0, 529.2666666666667], [506.0, 854.3333333333333], [507.0, 272.07142857142856], [514.0, 771.75], [512.0, 818.1], [526.0, 314.66666666666663], [524.0, 125.75000000000001], [522.0, 763.8333333333334], [516.0, 834.0], [518.0, 579.0], [528.0, 76.72727272727273], [542.0, 86.625], [540.0, 380.14285714285717], [538.0, 417.5555555555556], [536.0, 363.86956521739137], [530.0, 456.1176470588235], [532.0, 545.8000000000001], [534.0, 254.2], [520.0, 45.75], [550.0, 521.0943396226415], [546.0, 237.2], [558.0, 105.58333333333331], [544.0, 528.0], [548.0, 696.7142857142856], [560.0, 700.0625], [574.0, 327.00000000000006], [572.0, 428.28124999999994], [570.0, 102.74999999999999], [568.0, 650.0], [562.0, 263.88000000000005], [564.0, 414.7], [566.0, 147.76923076923077], [552.0, 598.2058823529413], [554.0, 447.7142857142857], [556.0, 159.54545454545456], [578.0, 702.5], [576.0, 305.0], [590.0, 189.33333333333331], [588.0, 712.2], [586.0, 126.88888888888889], [580.0, 72.16666666666667], [582.0, 752.6666666666666], [596.0, 50.61538461538461], [594.0, 9.125], [592.0, 8.0], [606.0, 295.6111111111111], [604.0, 26.42857142857143], [602.0, 825.5833333333333], [600.0, 872.0408163265306], [598.0, 723.3043478260868], [584.0, 334.00000000000006], [610.0, 360.9047619047619], [608.0, 228.8], [622.0, 577.7666666666667], [620.0, 514.625], [618.0, 703.4166666666667], [612.0, 702.5217391304349], [614.0, 478.51724137931035], [624.0, 591.1666666666667], [638.0, 244.79411764705887], [634.0, 277.2105263157894], [636.0, 17.5], [632.0, 141.21621621621625], [626.0, 205.47619047619045], [628.0, 16.5], [630.0, 345.1111111111111], [616.0, 735.2222222222222], [642.0, 232.0322580645161], [640.0, 129.5263157894737], [654.0, 251.82352941176472], [652.0, 399.875], [650.0, 687.5333333333332], [644.0, 112.36363636363637], [646.0, 21.88888888888889], [656.0, 109.86956521739131], [670.0, 448.5], [668.0, 351.17391304347825], [666.0, 440.6363636363636], [664.0, 146.625], [658.0, 186.08333333333334], [660.0, 23.22222222222222], [662.0, 26.0], [648.0, 138.76923076923077], [674.0, 487.14285714285717], [672.0, 419.1111111111111], [686.0, 774.1428571428571], [684.0, 932.1538461538462], [676.0, 723.8064516129033], [678.0, 746.0714285714286], [688.0, 516.8888888888889], [702.0, 275.75], [700.0, 109.0], [698.0, 152.0], [696.0, 120.75], [690.0, 383.7727272727273], [692.0, 352.5555555555556], [694.0, 460.2857142857143], [680.0, 533.75], [706.0, 376.561403508772], [704.0, 562.5384615384617], [718.0, 676.2000000000002], [716.0, 525.5], [714.0, 226.5], [708.0, 581.8809523809523], [710.0, 329.40000000000003], [720.0, 805.8518518518518], [734.0, 580.2222222222222], [732.0, 647.962962962963], [730.0, 517.7222222222223], [728.0, 492.45], [722.0, 624.1282051282052], [724.0, 208.07407407407408], [726.0, 685.0], [712.0, 187.6111111111111], [740.0, 443.2105263157894], [742.0, 617.1], [736.0, 551.3333333333334], [750.0, 525.6], [748.0, 196.79310344827587], [746.0, 847.8800000000001], [738.0, 696.6875], [760.0, 109.58823529411765], [762.0, 358.90000000000003], [764.0, 534.0], [766.0, 499.52173913043487], [752.0, 530.4054054054056], [754.0, 281.625], [756.0, 337.3333333333333], [758.0, 180.95000000000002], [744.0, 503.7692307692307], [770.0, 121.375], [768.0, 602.076923076923], [782.0, 815.3030303030304], [780.0, 572.3], [778.0, 656.2], [772.0, 516.6666666666666], [774.0, 766.7419354838709], [784.0, 701.2307692307694], [798.0, 254.81818181818187], [796.0, 603.090909090909], [794.0, 484.33333333333337], [792.0, 415.4], [786.0, 603.969696969697], [788.0, 536.5], [790.0, 555.7599999999999], [776.0, 659.1304347826089], [802.0, 287.5789473684211], [800.0, 456.3666666666667], [814.0, 600.4545454545455], [812.0, 382.33333333333337], [810.0, 570.1666666666667], [804.0, 514.8947368421053], [806.0, 406.625], [816.0, 331.37499999999994], [822.0, 19.5], [820.0, 521.3333333333334], [818.0, 189.0], [830.0, 572.2], [828.0, 879.6666666666669], [824.0, 700.3333333333333], [826.0, 419.99999999999994], [808.0, 887.5714285714287], [856.0, 580.8], [836.0, 183.0], [838.0, 819.0714285714286], [840.0, 904.7499999999999], [842.0, 511.0], [846.0, 30.0], [834.0, 675.7777777777778], [832.0, 747.0999999999999], [844.0, 21.333333333333332], [850.0, 583.0], [854.0, 854.7142857142857], [852.0, 976.2222222222222], [862.0, 17.333333333333332], [848.0, 27.5], [858.0, 561.5714285714287], [860.0, 937.5384615384617], [866.0, 579.7777777777778], [864.0, 836.0], [878.0, 716.75], [876.0, 916.0000000000002], [874.0, 104.57142857142857], [868.0, 677.6875], [870.0, 276.0833333333333], [880.0, 462.75], [894.0, 726.1428571428571], [892.0, 651.3333333333333], [890.0, 367.11111111111114], [888.0, 563.5], [882.0, 637.0], [884.0, 808.7142857142858], [886.0, 631.5263157894736], [872.0, 192.53333333333333], [898.0, 22.5], [896.0, 270.29999999999995], [910.0, 768.8867924528302], [908.0, 624.6499999999999], [920.0, 769.4827586206898], [902.0, 1023.0], [900.0, 274.5], [922.0, 797.2727272727274], [924.0, 415.5652173913043], [926.0, 494.57894736842104], [912.0, 772.1111111111112], [914.0, 659.2222222222222], [916.0, 803.0434782608694], [918.0, 883.75], [904.0, 290.047619047619], [906.0, 899.1250000000001], [930.0, 103.07692307692308], [928.0, 626.8888888888889], [942.0, 599.6923076923076], [940.0, 461.7142857142857], [938.0, 490.0526315789475], [932.0, 191.66666666666669], [934.0, 505.4848484848486], [944.0, 683.5384615384614], [946.0, 609.4444444444445], [958.0, 171.0], [956.0, 674.0], [952.0, 821.5000000000001], [954.0, 347.0], [948.0, 343.5], [950.0, 769.0], [936.0, 662.5909090909091], [962.0, 452.6], [960.0, 233.53846153846152], [974.0, 401.42857142857144], [972.0, 380.3333333333333], [964.0, 112.36842105263155], [966.0, 422.54545454545456], [976.0, 1016.5], [990.0, 246.6], [988.0, 820.9310344827587], [986.0, 557.25], [984.0, 1000.3333333333334], [978.0, 786.2105263157895], [980.0, 1026.2857142857144], [982.0, 910.6666666666666], [968.0, 686.9375], [970.0, 830.1111111111111], [1022.0, 938.1176470588238], [994.0, 542.2666666666668], [1006.0, 745.6756756756755], [992.0, 525.0], [1008.0, 662.75], [1018.0, 478.8500000000001], [1020.0, 682.3235294117646], [1016.0, 578.0588235294117], [998.0, 274.5], [996.0, 187.99999999999994], [1010.0, 1015.3333333333334], [1012.0, 631.6567164179107], [1014.0, 537.8888888888888], [1000.0, 688.4999999999999], [1002.0, 539.6666666666667], [1004.0, 535.5714285714286], [1036.0, 638.0], [1028.0, 746.6363636363636], [1024.0, 815.6], [1052.0, 598.2222222222222], [1048.0, 535.7241379310345], [1032.0, 718.6842105263158], [1072.0, 991.2666666666665], [1076.0, 483.96000000000004], [1080.0, 373.375], [1084.0, 873.1866666666667], [1056.0, 548.7826086956521], [1060.0, 624.2000000000002], [1068.0, 1035.4615384615386], [1064.0, 1000.5], [1044.0, 616.0], [1040.0, 1033.3333333333335], [1092.0, 1094.0], [1088.0, 566.4782608695652], [1116.0, 601.8620689655174], [1112.0, 813.2909090909092], [1108.0, 546.5], [1096.0, 946.8947368421053], [1100.0, 633.5600000000002], [1120.0, 206.4705882352941], [1148.0, 643.8055555555554], [1144.0, 656.1875], [1136.0, 490.7142857142857], [1140.0, 524.5000000000001], [1124.0, 980.047619047619], [1128.0, 545.5588235294117], [1132.0, 228.2], [1104.0, 771.8725490196076], [1156.0, 917.5333333333333], [1152.0, 1068.1666666666667], [1180.0, 1152.5], [1176.0, 1114.4], [1160.0, 906.1666666666666], [1164.0, 1043.0], [1212.0, 593.4117647058822], [1184.0, 17.0], [1208.0, 141.88888888888889], [1204.0, 547.25], [1200.0, 954.6666666666667], [1188.0, 423.0625000000001], [1192.0, 868.5], [1196.0, 131.2], [1168.0, 922.6666666666666], [1172.0, 1142.9411764705887], [1220.0, 1089.725806451613], [1216.0, 613.1666666666666], [1244.0, 272.08333333333337], [1240.0, 427.75], [1236.0, 832.4285714285713], [1224.0, 1100.1071428571427], [1228.0, 334.08], [1248.0, 663.0], [1276.0, 1002.3734939759037], [1272.0, 195.35714285714283], [1268.0, 540.75], [1264.0, 1058.1388888888887], [1252.0, 937.5], [1256.0, 474.2], [1260.0, 953.7692307692307], [1232.0, 575.2], [1292.0, 608.2380952380953], [1280.0, 880.8235294117648], [1308.0, 393.27272727272725], [1304.0, 488.70588235294116], [1300.0, 958.5], [1284.0, 26.0], [1288.0, 646.0], [1332.0, 750.0], [1328.0, 525.0], [1336.0, 703.3684210526316], [1340.0, 759.0476190476192], [1312.0, 586.4736842105264], [1316.0, 181.9], [1320.0, 294.5], [1324.0, 133.73684210526312], [1296.0, 1064.8333333333335], [1348.0, 395.44444444444446], [1344.0, 689.5999999999999], [1372.0, 1130.076923076923], [1364.0, 910.8666666666667], [1368.0, 25.0], [1352.0, 596.2909090909089], [1356.0, 738.5471698113205], [1404.0, 623.0000000000002], [1376.0, 1138.4285714285713], [1396.0, 805.4166666666666], [1400.0, 598.5217391304349], [1392.0, 1008.0625], [1380.0, 817.423076923077], [1384.0, 945.9056603773586], [1388.0, 809.0], [1360.0, 923.4749999999999], [1416.0, 852.342857142857], [1420.0, 1073.619565217391], [1408.0, 771.0588235294117], [1432.0, 1158.5263157894735], [1436.0, 935.3333333333333], [1428.0, 302.1136363636365], [1412.0, 963.8666666666667], [1456.0, 838.8450704225354], [1460.0, 286.0], [1464.0, 549.6666666666666], [1468.0, 419.89473684210526], [1440.0, 85.43749999999999], [1444.0, 1015.9333333333337], [1448.0, 611.1666666666667], [1452.0, 586.375], [1424.0, 560.2325581395347], [1476.0, 848.8800000000001], [1472.0, 524.6969696969697], [1500.0, 885.7872340425532], [1496.0, 945.3571428571428], [1492.0, 940.25], [1480.0, 574.9411764705883], [1484.0, 839.5192307692308], [1504.0, 820.5348837209303], [1532.0, 1045.888888888889], [1524.0, 984.4444444444445], [1520.0, 800.0], [1528.0, 1020.5416666666666], [1508.0, 896.3333333333331], [1516.0, 437.47619047619037], [1512.0, 1000.0], [1488.0, 806.6666666666666], [1544.0, 837.6153846153844], [1536.0, 954.5416666666666], [1540.0, 318.9000000000001], [1564.0, 611.0769230769232], [1560.0, 643.5500000000001], [1548.0, 485.1111111111112], [1568.0, 735.2608695652174], [1596.0, 523.0], [1592.0, 955.8571428571428], [1588.0, 758.5714285714287], [1584.0, 348.6153846153846], [1572.0, 543.5], [1576.0, 706.7631578947367], [1580.0, 876.0454545454544], [1552.0, 1080.0], [1556.0, 1073.0], [1604.0, 987.3454545454545], [1600.0, 912.3157894736843], [1628.0, 63.64705882352941], [1624.0, 427.7142857142857], [1620.0, 747.4444444444443], [1608.0, 921.1428571428571], [1612.0, 985.1500000000001], [1632.0, 525.1764705882354], [1660.0, 952.8214285714286], [1656.0, 1071.4210526315787], [1652.0, 895.3599999999999], [1648.0, 964.448275862069], [1636.0, 432.91304347826093], [1640.0, 741.85], [1644.0, 933.7857142857143], [1616.0, 439.75], [1668.0, 1177.75], [1664.0, 851.2857142857142], [1692.0, 1005.6315789473686], [1688.0, 517.0909090909091], [1684.0, 677.9677419354838], [1672.0, 967.8571428571428], [1676.0, 981.0526315789474], [1696.0, 865.2343749999999], [1724.0, 701.8652482269504], [1720.0, 1152.1744186046508], [1716.0, 918.2558139534885], [1712.0, 754.1428571428571], [1700.0, 1025.4772727272725], [1704.0, 1030.7045454545455], [1708.0, 759.5675675675674], [1680.0, 715.2682926829269], [1732.0, 462.8333333333333], [1756.0, 795.2702702702703], [1728.0, 1043.888888888889], [1752.0, 1027.5416666666667], [1748.0, 1105.8604651162789], [1736.0, 780.8684210526316], [1740.0, 1053.4745762711866], [1760.0, 920.9000000000001], [1784.0, 313.66666666666663], [1788.0, 929.1818181818181], [1776.0, 814.9791666666666], [1780.0, 231.6904761904762], [1764.0, 738.8936170212764], [1768.0, 475.63157894736844], [1772.0, 972.8714285714285], [1744.0, 987.2941176470588], [1796.0, 714.0877192982458], [1792.0, 986.4347826086955], [1800.0, 393.2], [1804.0, 371.08860759493666], [1808.0, 1042.6086956521738], [1812.0, 1036.076923076923], [1816.0, 742.0], [1820.0, 1149.7727272727273], [1824.0, 894.7222222222223], [1848.0, 1068.6440677966104], [1852.0, 911.5416666666666], [1840.0, 286.2249999999999], [1844.0, 831.25], [1828.0, 1035.3877551020407], [1836.0, 1159.7631578947367], [1832.0, 839.9400000000002], [1860.0, 859.3809523809523], [1856.0, 1120.541666666667], [1864.0, 1032.8000000000002], [1868.0, 177.34782608695656], [1872.0, 1016.375], [1876.0, 1202.7058823529412], [1884.0, 838.0721649484537], [1880.0, 1184.4], [1888.0, 989.48], [1912.0, 1059.0892857142858], [1916.0, 1064.0000000000002], [1904.0, 677.6666666666667], [1908.0, 1000.3571428571429], [1892.0, 1138.4406779661012], [1896.0, 186.32258064516122], [1900.0, 883.4200000000003], [1924.0, 374.0416666666665], [1920.0, 1070.5416666666665], [1928.0, 689.8163265306121], [1932.0, 1006.1122448979593], [1940.0, 344.72727272727275], [1936.0, 1085.3235294117649], [1944.0, 1069.4375000000002], [1948.0, 666.6923076923075], [1952.0, 338.42857142857144], [1976.0, 620.6], [1980.0, 771.0], [1968.0, 1041.7000000000003], [1972.0, 760.3333333333334], [1956.0, 1089.3333333333335], [1960.0, 943.4732142857142], [1964.0, 676.406779661017], [1988.0, 1110.769230769231], [1984.0, 1122.879999999999], [1996.0, 840.6857142857142], [1992.0, 1014.0], [2032.0, 1061.8490566037735], [2040.0, 1070.2142857142858], [2036.0, 1109.25], [2044.0, 855.1125000000002], [2000.0, 976.2818181818182], [2004.0, 883.4242424242424], [2008.0, 879.5500000000003], [2012.0, 1095.4615384615386], [2016.0, 1190.7000000000003], [2020.0, 726.859649122807], [2028.0, 684.4666666666667], [2024.0, 1056.5283018867929], [2056.0, 973.8108108108111], [2048.0, 1126.7499999999998], [2064.0, 917.2105263157891], [2072.0, 873.1489361702127], [2080.0, 901.4571428571429], [2088.0, 1043.9642857142856], [2096.0, 1088.2702702702707], [2104.0, 1141.2553191489362], [2112.0, 991.0204081632653], [2160.0, 1122.3333333333333], [2168.0, 996.2926829268295], [2144.0, 963.3333333333334], [2152.0, 880.3076923076923], [2120.0, 967.2068965517242], [2128.0, 1134.5714285714284], [2136.0, 1042.2222222222224], [2184.0, 981.119402985075], [2176.0, 787.4264705882352], [2192.0, 1054.625], [2200.0, 209.65217391304347], [2208.0, 1061.2045454545455], [2216.0, 462.9200000000001], [2224.0, 1123.3174603174607], [2232.0, 828.5925925925926], [2240.0, 1050.1699999999998], [2288.0, 1096.9041095890411], [2296.0, 1070.0844155844154], [2272.0, 1024.7419354838712], [2280.0, 586.9302325581394], [2248.0, 1102.7317073170727], [2264.0, 680.7894736842105], [2256.0, 1136.4814814814813], [2304.0, 840.3125], [2312.0, 976.0909090909092], [2320.0, 896.8947368421052], [2336.0, 1005.121951219512], [2344.0, 512.3076923076923], [2328.0, 968.125], [2057.0, 556.5], [2049.0, 1116.6716417910447], [2065.0, 777.0000000000001], [2073.0, 1041.9], [2081.0, 763.4342105263157], [2089.0, 841.3666666666667], [2097.0, 1096.7368421052631], [2105.0, 750.7878787878788], [2113.0, 984.6764705882355], [2161.0, 950.074074074074], [2169.0, 1017.5844155844158], [2145.0, 728.6857142857143], [2153.0, 877.6315789473683], [2121.0, 451.5833333333333], [2129.0, 946.4186046511629], [2137.0, 1146.436974789916], [2185.0, 394.1153846153846], [2177.0, 667.1935483870967], [2201.0, 932.2941176470589], [2193.0, 1054.5], [2273.0, 329.7], [2281.0, 427.4594594594595], [2289.0, 881.8709677419355], [2297.0, 1132.2], [2209.0, 1100.4881889763783], [2217.0, 421.2857142857143], [2225.0, 1068.746606334841], [2233.0, 980.7647058823528], [2241.0, 1055.746835443038], [2249.0, 890.8125], [2265.0, 633.8518518518517], [2257.0, 617.5652173913044], [2305.0, 1184.8333333333333], [2313.0, 1016.695652173913], [2321.0, 996.5625000000001], [2337.0, 1113.7096774193544], [2329.0, 889.9411764705882], [2345.0, 474.375], [1037.0, 945.6470588235295], [1029.0, 770.3571428571429], [1053.0, 791.1], [1025.0, 628.25], [1049.0, 500.00000000000017], [1033.0, 793.1428571428571], [1073.0, 912.7692307692308], [1077.0, 21.0], [1081.0, 25.375], [1085.0, 761.0], [1057.0, 573.2666666666667], [1061.0, 731.9375000000001], [1065.0, 809.6], [1069.0, 790.5714285714284], [1045.0, 529.1794871794871], [1041.0, 26.0], [1101.0, 508.6875], [1093.0, 529.0833333333334], [1117.0, 706.3888888888889], [1089.0, 1029.0], [1113.0, 649.9599999999999], [1109.0, 930.75], [1097.0, 980.8235294117646], [1137.0, 709.8666666666666], [1141.0, 440.6153846153846], [1145.0, 885.7611940298509], [1149.0, 875.6521739130433], [1121.0, 318.83333333333337], [1125.0, 559.7142857142857], [1129.0, 765.3846153846154], [1133.0, 549.5384615384615], [1105.0, 876.7674418604649], [1165.0, 797.4], [1153.0, 1144.25], [1177.0, 1112.0], [1181.0, 917.0714285714286], [1157.0, 1074.9846153846154], [1161.0, 1102.6666666666667], [1185.0, 445.6428571428571], [1213.0, 731.2444444444446], [1209.0, 77.5], [1205.0, 342.18181818181824], [1201.0, 1086.2222222222224], [1189.0, 754.047619047619], [1193.0, 951.0588235294119], [1197.0, 88.66666666666667], [1169.0, 989.3000000000001], [1173.0, 840.5806451612906], [1221.0, 1089.9583333333333], [1217.0, 269.61538461538464], [1245.0, 391.55555555555554], [1241.0, 213.0], [1237.0, 781.5217391304349], [1225.0, 647.9090909090909], [1229.0, 946.5454545454544], [1249.0, 192.66666666666666], [1277.0, 859.6315789473684], [1273.0, 459.75000000000006], [1269.0, 189.64285714285717], [1265.0, 290.83333333333326], [1253.0, 887.3249999999999], [1257.0, 751.2142857142857], [1261.0, 692.3448275862071], [1233.0, 403.6875], [1329.0, 536.5], [1293.0, 709.6666666666666], [1289.0, 637.0], [1305.0, 695.1142857142858], [1309.0, 17.5], [1285.0, 465.0], [1281.0, 1070.0625], [1333.0, 596.1481481481483], [1337.0, 877.4848484848486], [1341.0, 449.0], [1313.0, 550.8666666666668], [1317.0, 203.66666666666666], [1321.0, 403.27272727272725], [1325.0, 380.7142857142857], [1297.0, 707.2], [1301.0, 1036.8076923076922], [1349.0, 798.5517241379312], [1345.0, 382.9333333333334], [1373.0, 699.1304347826085], [1369.0, 221.8888888888889], [1365.0, 380.51612903225805], [1353.0, 73.45454545454545], [1357.0, 616.7540983606558], [1377.0, 915.8064516129033], [1405.0, 624.0], [1401.0, 173.57142857142858], [1393.0, 813.75], [1397.0, 18.0], [1381.0, 885.3333333333334], [1385.0, 889.2727272727273], [1389.0, 1030.7368421052631], [1361.0, 337.15789473684214], [1413.0, 960.2222222222222], [1409.0, 881.1666666666666], [1437.0, 963.9444444444443], [1433.0, 1218.1428571428573], [1429.0, 582.6875], [1417.0, 958.5555555555554], [1421.0, 984.8378378378378], [1441.0, 305.95652173913044], [1445.0, 1029.3333333333333], [1469.0, 722.0937500000001], [1465.0, 73.86666666666667], [1461.0, 857.7222222222226], [1457.0, 550.2499999999999], [1449.0, 722.4444444444445], [1453.0, 856.7727272727274], [1425.0, 460.5], [1485.0, 978.5], [1477.0, 748.1612903225808], [1501.0, 742.0], [1473.0, 735.3043478260871], [1497.0, 860.6315789473684], [1481.0, 232.66666666666669], [1505.0, 861.0], [1533.0, 1059.4615384615383], [1529.0, 1048.3333333333335], [1525.0, 938.3783783783782], [1521.0, 1037.0434782608695], [1509.0, 1121.5333333333326], [1513.0, 812.5], [1517.0, 472.95744680851067], [1489.0, 640.4444444444443], [1493.0, 996.4444444444445], [1585.0, 477.8888888888889], [1565.0, 904.0344827586207], [1561.0, 980.0], [1545.0, 973.6250000000005], [1541.0, 786.6363636363636], [1537.0, 704.0], [1549.0, 715.7499999999999], [1589.0, 1033.9090909090908], [1593.0, 1020.1555555555557], [1597.0, 557.5882352941178], [1569.0, 1092.5652173913043], [1573.0, 1093.1000000000001], [1577.0, 949.8888888888889], [1581.0, 1087.8714285714284], [1553.0, 1003.4545454545454], [1557.0, 806.2857142857143], [1605.0, 840.84], [1601.0, 1027.7111111111112], [1629.0, 429.1111111111111], [1625.0, 393.4], [1621.0, 1068.2826086956518], [1609.0, 989.666666666667], [1613.0, 899.6], [1633.0, 963.1190476190477], [1661.0, 725.7], [1649.0, 930.3333333333334], [1653.0, 530.4848484848485], [1657.0, 1145.0], [1637.0, 1048.7599999999998], [1641.0, 978.1794871794873], [1645.0, 824.5606060606062], [1617.0, 1034.1304347826085], [1669.0, 953.7777777777778], [1665.0, 967.3068181818182], [1693.0, 680.1666666666665], [1689.0, 924.2], [1685.0, 771.5625000000001], [1673.0, 843.2222222222222], [1677.0, 973.7500000000001], [1697.0, 944.6], [1725.0, 593.274193548387], [1721.0, 1110.2500000000005], [1717.0, 1023.5312499999999], [1713.0, 626.3499999999999], [1701.0, 808.2], [1705.0, 1007.5238095238096], [1709.0, 917.6071428571429], [1681.0, 116.5], [1733.0, 1005.5918367346937], [1757.0, 442.8], [1729.0, 903.2222222222222], [1753.0, 902.1428571428571], [1749.0, 760.5263157894738], [1737.0, 926.4], [1741.0, 1066.7000000000003], [1761.0, 965.684210526316], [1785.0, 589.6363636363635], [1789.0, 1026.6301369863017], [1777.0, 1088.1914893617022], [1781.0, 931.6081081081081], [1765.0, 209.79999999999998], [1769.0, 500.19999999999993], [1773.0, 794.6888888888888], [1745.0, 367.65625], [1805.0, 996.4363636363635], [1797.0, 918.1379310344827], [1793.0, 570.608695652174], [1821.0, 1071.6363636363637], [1817.0, 1128.5], [1801.0, 89.85714285714288], [1809.0, 1173.9122807017538], [1813.0, 1218.857142857143], [1825.0, 1148.5555555555554], [1849.0, 818.53125], [1853.0, 791.2068965517241], [1841.0, 534.55], [1845.0, 718.0277777777778], [1829.0, 841.7000000000002], [1833.0, 1065.5476190476193], [1837.0, 1061.8333333333335], [1861.0, 739.5555555555555], [1857.0, 819.8823529411766], [1869.0, 964.8672566371681], [1865.0, 952.6153846153846], [1905.0, 936.2499999999999], [1909.0, 922.8421052631579], [1913.0, 1047.8695652173915], [1917.0, 1034.6842105263158], [1873.0, 376.45833333333337], [1877.0, 1083.5945945945946], [1881.0, 1082.9444444444448], [1885.0, 871.318181818182], [1889.0, 1085.8749999999998], [1893.0, 1000.0925925925926], [1897.0, 636.9285714285716], [1901.0, 836.076923076923], [1925.0, 632.0000000000001], [1921.0, 1093.9999999999998], [1929.0, 905.96], [1933.0, 1016.3404255319152], [1937.0, 1063.6133333333337], [1941.0, 804.5476190476193], [1945.0, 1045.590909090909], [1949.0, 726.6279069767438], [1953.0, 1085.6739130434783], [1977.0, 1007.5714285714283], [1981.0, 1048.918918918919], [1969.0, 989.7000000000002], [1973.0, 1049.6521739130435], [1957.0, 1049.8], [1961.0, 264.4999999999999], [1965.0, 1171.0], [1989.0, 1198.5714285714284], [1985.0, 1145.7999999999997], [1997.0, 560.3829787234042], [1993.0, 517.0], [2033.0, 913.8444444444442], [2041.0, 1090.0172413793102], [2037.0, 1162.9375], [2045.0, 989.6666666666665], [2005.0, 760.1653543307089], [2001.0, 578.4666666666667], [2009.0, 1082.6290322580646], [2013.0, 928.9250000000001], [2017.0, 902.4883720930231], [2021.0, 1090.2333333333338], [2025.0, 987.1176470588234], [2029.0, 796.2399999999999], [2058.0, 818.7857142857144], [2050.0, 1121.4], [2066.0, 811.2222222222223], [2074.0, 900.0499999999995], [2082.0, 818.3461538461538], [2090.0, 1072.9351851851854], [2098.0, 1070.0], [2106.0, 162.83333333333331], [2114.0, 933.0000000000001], [2162.0, 629.625], [2170.0, 986.1805555555554], [2146.0, 1015.1076923076921], [2154.0, 1069.7716535433076], [2122.0, 1070.848684210526], [2130.0, 740.3913043478259], [2138.0, 1148.2121212121212], [2186.0, 442.8571428571429], [2178.0, 729.4999999999999], [2194.0, 1016.1944444444445], [2202.0, 993.9764705882352], [2210.0, 1034.910256410256], [2218.0, 943.7916666666669], [2226.0, 1072.6081081081081], [2234.0, 1041.6860465116279], [2242.0, 920.3176470588236], [2290.0, 906.9333333333334], [2298.0, 981.7142857142857], [2274.0, 651.483870967742], [2282.0, 311.0], [2250.0, 907.0666666666666], [2258.0, 470.7948717948719], [2266.0, 798.4204545454544], [2306.0, 1069.5714285714284], [2314.0, 1097.8831168831166], [2322.0, 974.5199999999999], [2338.0, 1078.925], [2330.0, 857.9473684210524], [2059.0, 990.2470588235298], [2051.0, 1181.4774774774767], [2067.0, 634.2], [2075.0, 975.9142857142859], [2083.0, 759.6428571428571], [2091.0, 927.1764705882351], [2099.0, 1139.1200000000003], [2107.0, 193.6428571428571], [2115.0, 454.08888888888885], [2171.0, 886.7473684210526], [2147.0, 820.3170731707318], [2155.0, 1225.2916666666665], [2163.0, 859.59375], [2123.0, 1150.5803571428567], [2131.0, 726.4516129032257], [2139.0, 1124.1562500000005], [2187.0, 461.5], [2179.0, 742.3139534883722], [2195.0, 827.4705882352941], [2203.0, 1128.894230769231], [2219.0, 1014.5396825396823], [2211.0, 1115.0], [2227.0, 972.0281690140844], [2235.0, 911.3], [2251.0, 1088.3750000000005], [2275.0, 963.2371134020618], [2283.0, 1039.0], [2291.0, 723.6410256410259], [2299.0, 1073.3333333333333], [2243.0, 195.74074074074073], [2267.0, 1040.610169491525], [2259.0, 973.5647058823531], [2307.0, 1129.2857142857144], [2315.0, 1073.562043795621], [2323.0, 1112.6875000000005], [2339.0, 1224.1280000000004], [2331.0, 1214.3461538461538], [515.0, 736.9], [527.0, 461.99999999999994], [525.0, 43.8], [523.0, 307.75], [513.0, 230.6428571428571], [517.0, 659.1428571428572], [519.0, 253.11111111111111], [543.0, 72.84615384615384], [541.0, 443.46153846153845], [539.0, 344.90909090909093], [537.0, 392.08333333333337], [529.0, 28.5], [531.0, 440.27777777777777], [533.0, 400.0833333333333], [535.0, 431.6363636363636], [521.0, 411.6666666666667], [551.0, 107.5], [547.0, 151.94444444444446], [559.0, 374.7857142857143], [545.0, 526.0], [557.0, 378.3636363636363], [549.0, 754.8799999999999], [575.0, 451.8292682926829], [573.0, 566.5600000000001], [571.0, 445.92857142857144], [569.0, 123.10000000000001], [561.0, 175.3846153846154], [563.0, 154.8], [565.0, 145.85714285714286], [567.0, 339.625], [553.0, 295.3636363636364], [555.0, 146.375], [579.0, 315.5], [591.0, 397.5], [589.0, 455.5454545454545], [587.0, 214.1363636363636], [577.0, 301.3], [581.0, 723.9166666666667], [583.0, 656.5555555555555], [607.0, 583.6363636363636], [595.0, 15.636363636363637], [593.0, 8.5], [605.0, 32.68421052631579], [603.0, 78.16666666666667], [601.0, 765.0357142857142], [597.0, 62.230769230769226], [599.0, 438.0], [585.0, 69.9], [611.0, 557.2083333333334], [623.0, 737.3658536585366], [621.0, 563.0833333333333], [619.0, 816.0434782608695], [609.0, 362.5], [613.0, 185.66666666666669], [615.0, 810.2], [639.0, 392.06249999999994], [637.0, 120.3], [635.0, 361.99999999999994], [633.0, 347.33333333333337], [625.0, 166.45833333333331], [627.0, 187.83333333333331], [629.0, 323.53846153846155], [631.0, 104.83333333333333], [617.0, 695.3684210526317], [643.0, 70.33333333333333], [655.0, 132.7037037037037], [653.0, 168.99999999999994], [651.0, 645.5882352941177], [641.0, 186.0], [645.0, 231.7307692307692], [647.0, 380.72222222222223], [671.0, 656.25], [669.0, 558.4375], [667.0, 276.125], [665.0, 564.5], [657.0, 137.88235294117644], [659.0, 103.83333333333334], [661.0, 336.5714285714287], [663.0, 604.0370370370371], [649.0, 372.06249999999994], [679.0, 597.8], [675.0, 587.037037037037], [687.0, 588.0], [685.0, 1003.375], [673.0, 329.0], [677.0, 455.59090909090907], [703.0, 515.1500000000001], [701.0, 526.3333333333334], [699.0, 254.8181818181818], [697.0, 366.18750000000006], [689.0, 312.25], [691.0, 382.0], [693.0, 255.72727272727278], [695.0, 549.125], [683.0, 730.2222222222223], [681.0, 892.625], [707.0, 300.90740740740745], [719.0, 683.9000000000002], [717.0, 551.4528301886793], [715.0, 105.42105263157895], [705.0, 25.692307692307693], [709.0, 572.5833333333334], [711.0, 344.8181818181818], [735.0, 664.8571428571429], [733.0, 377.94117647058823], [731.0, 642.6666666666667], [729.0, 734.4444444444445], [721.0, 712.0], [723.0, 167.7142857142857], [725.0, 788.6764705882354], [727.0, 285.8666666666666], [713.0, 524.3043478260869], [741.0, 836.6315789473684], [737.0, 460.206896551724], [739.0, 887.7619047619048], [751.0, 509.33333333333337], [749.0, 694.1818181818182], [747.0, 759.1666666666666], [743.0, 949.5263157894738], [761.0, 173.0], [763.0, 369.7894736842105], [765.0, 364.0967741935484], [767.0, 530.9473684210526], [753.0, 20.333333333333332], [755.0, 289.6486486486487], [757.0, 670.5], [759.0, 370.3], [745.0, 757.875], [771.0, 616.3142857142857], [783.0, 636.75], [781.0, 347.8636363636364], [779.0, 815.8695652173913], [769.0, 553.7741935483871], [773.0, 638.0999999999999], [775.0, 738.8636363636364], [799.0, 271.6666666666667], [797.0, 99.76923076923077], [795.0, 56.06666666666667], [793.0, 377.7], [785.0, 168.14285714285714], [787.0, 656.72], [789.0, 607.529411764706], [791.0, 25.66666666666667], [777.0, 786.8], [803.0, 384.16], [815.0, 606.1666666666667], [813.0, 200.10000000000002], [811.0, 277.9], [801.0, 312.475], [805.0, 382.21428571428567], [807.0, 408.0], [831.0, 837.8], [827.0, 950.0333333333335], [825.0, 522.6666666666666], [829.0, 637.6315789473684], [817.0, 714.5714285714284], [819.0, 271.9285714285714], [823.0, 264.3157894736842], [821.0, 319.6], [809.0, 907.1818181818181], [857.0, 441.88235294117646], [837.0, 756.4], [839.0, 837.0], [841.0, 890.3181818181816], [843.0, 20.857142857142858], [847.0, 528.0], [835.0, 739.8461538461537], [833.0, 652.2857142857142], [845.0, 21.0], [851.0, 750.8333333333333], [855.0, 834.0000000000001], [859.0, 858.5666666666668], [861.0, 683.2857142857142], [863.0, 254.14285714285714], [849.0, 87.125], [867.0, 331.72], [879.0, 523.6], [877.0, 528.5714285714286], [875.0, 729.388888888889], [865.0, 669.5], [869.0, 524.875], [871.0, 806.578947368421], [895.0, 408.77777777777777], [893.0, 642.0], [891.0, 638.9375], [889.0, 480.44444444444446], [881.0, 486.6923076923077], [883.0, 708.3928571428572], [885.0, 550.9333333333335], [887.0, 557.5714285714286], [873.0, 398.75], [901.0, 543.7], [897.0, 628.5833333333333], [899.0, 106.0], [907.0, 563.7333333333333], [911.0, 899.8888888888888], [909.0, 763.7500000000001], [903.0, 272.25], [921.0, 760.9000000000001], [923.0, 667.5000000000001], [925.0, 586.0], [927.0, 790.6739130434784], [913.0, 734.9756097560976], [915.0, 579.7368421052632], [917.0, 973.8846153846152], [919.0, 745.0], [905.0, 833.7142857142857], [931.0, 495.79999999999995], [943.0, 850.3888888888889], [941.0, 408.25], [939.0, 664.9333333333333], [929.0, 17.8], [933.0, 127.42105263157893], [935.0, 170.50000000000003], [959.0, 181.75], [947.0, 1000.0], [945.0, 600.6], [957.0, 346.66666666666663], [955.0, 1001.5], [953.0, 813.2857142857143], [949.0, 735.2], [951.0, 337.69230769230774], [937.0, 354.0333333333333], [963.0, 298.8333333333333], [975.0, 1015.9444444444446], [973.0, 628.0], [971.0, 606.4999999999998], [961.0, 320.8333333333333], [965.0, 483.28571428571433], [967.0, 494.9615384615385], [989.0, 51.5], [987.0, 890.3225806451613], [985.0, 1000.8750000000001], [981.0, 841.9874999999998], [983.0, 900.75], [977.0, 972.6923076923077], [979.0, 1046.0000000000002], [991.0, 21.75], [969.0, 907.5510204081634], [995.0, 673.625], [1003.0, 578.8], [993.0, 787.7200000000001], [1007.0, 508.37500000000006], [999.0, 849.8181818181819], [997.0, 465.44444444444446], [1023.0, 764.6666666666667], [1021.0, 860.5851851851855], [1017.0, 796.1666666666666], [1019.0, 863.0], [1009.0, 425.2], [1011.0, 694.8181818181819], [1013.0, 571.9999999999998], [1015.0, 586.625], [1001.0, 691.5714285714286], [1005.0, 733.8571428571428], [1030.0, 905.2702702702702], [1054.0, 902.6470588235294], [1026.0, 1203.0], [1050.0, 575.4545454545455], [1046.0, 673.0], [1034.0, 885.6027397260274], [1038.0, 612.8333333333334], [1074.0, 169.0], [1078.0, 678.8484848484849], [1082.0, 231.8], [1086.0, 581.0], [1058.0, 674.6999999999999], [1062.0, 794.7297297297297], [1066.0, 461.87499999999994], [1070.0, 1032.1499999999999], [1042.0, 771.8571428571429], [1094.0, 881.2142857142857], [1118.0, 477.9090909090909], [1114.0, 471.0833333333333], [1110.0, 442.53333333333336], [1090.0, 731.653846153846], [1098.0, 1003.7142857142858], [1102.0, 572.9], [1150.0, 938.6875], [1146.0, 155.875], [1142.0, 746.5624999999999], [1138.0, 673.7435897435897], [1122.0, 388.0], [1126.0, 514.5], [1130.0, 317.34210526315786], [1134.0, 560.7777777777778], [1106.0, 673.3823529411765], [1166.0, 865.0], [1154.0, 1007.8], [1182.0, 775.8], [1178.0, 1019.9047619047619], [1162.0, 552.5], [1186.0, 912.0857142857143], [1214.0, 739.2592592592594], [1210.0, 162.9090909090909], [1206.0, 261.16666666666663], [1202.0, 493.9750000000001], [1190.0, 513.8888888888889], [1194.0, 521.9230769230769], [1198.0, 307.3], [1170.0, 551.1304347826086], [1174.0, 1035.125], [1222.0, 1165.0983606557377], [1242.0, 20.636363636363637], [1238.0, 732.1176470588236], [1218.0, 299.0], [1246.0, 1071.4285714285713], [1226.0, 1117.3636363636365], [1230.0, 200.8181818181818], [1278.0, 1039.1999999999998], [1274.0, 300.5], [1270.0, 566.6666666666666], [1266.0, 430.8181818181818], [1250.0, 1072.0900000000006], [1254.0, 284.9], [1258.0, 608.1111111111111], [1262.0, 530.4], [1234.0, 455.68749999999994], [1286.0, 438.4166666666667], [1282.0, 778.0526315789475], [1310.0, 381.09090909090907], [1306.0, 913.7459459459463], [1302.0, 550.25], [1290.0, 950.7894736842106], [1294.0, 847.3157894736843], [1330.0, 195.9], [1334.0, 210.5], [1338.0, 862.2692307692308], [1342.0, 376.6842105263157], [1314.0, 735.4782608695651], [1318.0, 479.95454545454544], [1322.0, 159.83333333333334], [1326.0, 205.72727272727272], [1298.0, 972.7948717948717], [1358.0, 751.9999999999999], [1350.0, 535.4166666666666], [1370.0, 672.0], [1366.0, 258.8947368421052], [1346.0, 760.4545454545454], [1374.0, 787.5102040816327], [1354.0, 859.842105263158], [1378.0, 810.6], [1406.0, 598.9142857142856], [1402.0, 136.0], [1394.0, 481.5862068965518], [1398.0, 18.5], [1382.0, 775.6969696969696], [1386.0, 632.25], [1390.0, 959.0625000000001], [1362.0, 800.3181818181819], [1414.0, 952.1250000000001], [1410.0, 1043.982142857143], [1438.0, 840.4186046511628], [1430.0, 753.3953488372091], [1434.0, 1101.0], [1422.0, 617.6388888888889], [1418.0, 1068.25], [1458.0, 445.09999999999997], [1462.0, 510.27272727272737], [1466.0, 134.1111111111111], [1470.0, 24.75], [1442.0, 536.25], [1446.0, 500.3], [1450.0, 635.0666666666666], [1454.0, 605.5714285714286], [1426.0, 524.2800000000001], [1478.0, 605.4545454545454], [1502.0, 932.9545454545454], [1498.0, 954.2790697674418], [1494.0, 1095.25], [1474.0, 681.9999999999999], [1482.0, 646.3636363636364], [1486.0, 614.7], [1534.0, 1126.4545454545457], [1530.0, 746.7], [1526.0, 1132.5], [1522.0, 1066.0], [1506.0, 988.0243902439028], [1514.0, 816.4166666666667], [1510.0, 1001.0], [1518.0, 747.75], [1490.0, 751.5500000000001], [1550.0, 640.7399999999999], [1538.0, 422.2142857142857], [1566.0, 931.5294117647059], [1562.0, 883.4999999999999], [1546.0, 1018.3965517241379], [1542.0, 784.0], [1598.0, 933.0597014925371], [1594.0, 129.5], [1590.0, 536.0], [1586.0, 831.8857142857142], [1570.0, 768.8571428571427], [1574.0, 1009.0714285714286], [1578.0, 957.75], [1582.0, 1113.051724137931], [1554.0, 897.5454545454545], [1558.0, 892.7142857142858], [1606.0, 889.1052631578946], [1630.0, 218.83333333333334], [1626.0, 222.3333333333334], [1622.0, 1012.0769230769231], [1602.0, 620.75], [1610.0, 949.0307692307694], [1614.0, 1029.4878048780486], [1662.0, 138.6], [1658.0, 1162.2857142857142], [1654.0, 918.608695652174], [1650.0, 821.6800000000001], [1634.0, 898.2580645161291], [1638.0, 1066.017543859649], [1642.0, 944.44], [1646.0, 520.8235294117646], [1618.0, 878.5555555555555], [1670.0, 1131.5961538461538], [1690.0, 971.820512820513], [1686.0, 342.5], [1666.0, 953.4516129032256], [1694.0, 1006.3333333333334], [1674.0, 961.0666666666667], [1678.0, 903.9999999999998], [1726.0, 813.6769230769231], [1722.0, 925.4000000000003], [1718.0, 1101.507692307692], [1714.0, 776.5999999999999], [1698.0, 707.6666666666666], [1702.0, 1079.235294117647], [1706.0, 994.54347826087], [1710.0, 510.8], [1682.0, 311.61538461538464], [1734.0, 533.9666666666667], [1758.0, 660.2575757575755], [1754.0, 745.6190476190476], [1750.0, 887.5], [1730.0, 1172.0], [1738.0, 1089.5384615384617], [1742.0, 1154.075], [1762.0, 978.4347826086955], [1786.0, 373.5238095238096], [1790.0, 665.7272727272727], [1778.0, 895.7078651685395], [1782.0, 522.1999999999999], [1766.0, 556.1951219512193], [1770.0, 752.4473684210526], [1774.0, 1086.1304347826085], [1746.0, 926.8793103448278], [1842.0, 364.125], [1798.0, 763.5517241379309], [1794.0, 915.4375], [1822.0, 1075.45], [1818.0, 1142.875], [1806.0, 1001.9629629629629], [1802.0, 215.6875], [1846.0, 742.6250000000001], [1850.0, 985.5806451612904], [1854.0, 906.1836734693878], [1810.0, 1106.5820895522393], [1814.0, 866.6981132075471], [1826.0, 710.6744186046511], [1830.0, 817.8214285714286], [1834.0, 1124.2777777777778], [1838.0, 1005.875], [1862.0, 318.5416666666667], [1858.0, 981.7884615384615], [1866.0, 852.969696969697], [1870.0, 656.0], [1874.0, 875.7931034482759], [1878.0, 1153.1052631578946], [1886.0, 449.8181818181818], [1882.0, 941.5555555555555], [1890.0, 1024.3], [1914.0, 983.1351351351352], [1918.0, 1119.0200000000004], [1906.0, 1043.9090909090908], [1910.0, 1045.4666666666667], [1894.0, 735.3076923076924], [1898.0, 404.06666666666666], [1902.0, 1025.714285714285], [1926.0, 831.5625], [1922.0, 897.1052631578948], [1930.0, 1070.2470588235299], [1934.0, 974.5714285714286], [1938.0, 842.3684210526311], [1942.0, 658.2916666666667], [1946.0, 899.7254901960785], [1950.0, 334.037037037037], [1954.0, 1224.4], [1978.0, 849.6363636363636], [1982.0, 1132.75], [1970.0, 934.0], [1974.0, 974.9117647058824], [1958.0, 679.15], [1962.0, 282.3809523809524], [1966.0, 884.6363636363636], [1994.0, 648.3636363636364], [1986.0, 1164.6190476190475], [1990.0, 1242.0], [1998.0, 982.4084507042252], [2034.0, 1035.426086956522], [2038.0, 832.8636363636363], [2042.0, 751.5853658536586], [2046.0, 836.0937499999999], [2002.0, 1091.7656250000002], [2006.0, 362.6451612903225], [2010.0, 981.6071428571429], [2014.0, 1092.9999999999998], [2018.0, 1083.8035714285713], [2022.0, 1088.639534883721], [2026.0, 696.758064516129], [2030.0, 895.9268292682927], [2060.0, 920.9615384615383], [2052.0, 1100.5633802816903], [2068.0, 847.0769230769231], [2076.0, 682.9166666666666], [2084.0, 705.6153846153844], [2092.0, 1091.5217391304352], [2100.0, 1211.3749999999998], [2108.0, 629.326530612245], [2116.0, 676.8333333333334], [2164.0, 653.1636363636362], [2172.0, 800.9354838709676], [2148.0, 925.4625000000001], [2156.0, 1091.4999999999998], [2124.0, 883.2916666666665], [2132.0, 972.0750000000004], [2140.0, 825.7647058823527], [2276.0, 740.0000000000001], [2188.0, 1034.3333333333333], [2180.0, 1043.2307692307695], [2236.0, 961.3243243243242], [2204.0, 950.0392156862744], [2284.0, 801.6571428571427], [2292.0, 1046.8469387755101], [2300.0, 994.7894736842105], [2220.0, 1099.116504854369], [2212.0, 1116.0], [2228.0, 888.4590163934429], [2244.0, 921.570093457944], [2252.0, 905.1860465116281], [2260.0, 1124.8571428571431], [2268.0, 1021.7664233576642], [2308.0, 940.8], [2316.0, 1101.4347826086955], [2340.0, 1148.1304347826076], [2332.0, 882.2796610169493], [2324.0, 1003.0], [2061.0, 937.9016393442625], [2053.0, 1108.3333333333333], [2069.0, 1014.5], [2077.0, 643.5], [2085.0, 780.9156626506025], [2093.0, 1119.9382716049388], [2101.0, 1053.0681818181818], [2109.0, 380.388888888889], [2125.0, 807.5526315789473], [2117.0, 1100.9807692307693], [2165.0, 903.3387096774189], [2173.0, 260.9166666666667], [2149.0, 850.6], [2157.0, 986.3333333333335], [2133.0, 884.5047619047621], [2141.0, 519.6296296296296], [2189.0, 995.35294117647], [2181.0, 1006.7894736842105], [2197.0, 1096.3714285714284], [2205.0, 1063.5000000000002], [2221.0, 1044.9333333333334], [2213.0, 864.5], [2229.0, 980.7114093959735], [2237.0, 793.6], [2245.0, 987.1250000000001], [2253.0, 1130.5164835164833], [2293.0, 1093.55], [2301.0, 1031.6470588235293], [2277.0, 959.462962962963], [2285.0, 1054.0], [2261.0, 678.1451612903227], [2269.0, 1050.3653846153852], [2309.0, 827.1901408450705], [2317.0, 892.6521739130434], [2333.0, 1100.0454545454547], [2341.0, 515.0], [2325.0, 1156.125], [1031.0, 938.804347826087], [1027.0, 859.8888888888889], [1055.0, 692.25], [1051.0, 251.0], [1047.0, 411.96], [1035.0, 769.0344827586207], [1039.0, 915.5999999999999], [1075.0, 401.75], [1079.0, 99.58333333333333], [1083.0, 303.3636363636364], [1087.0, 530.3000000000001], [1059.0, 698.5714285714286], [1063.0, 1002.6], [1071.0, 973.4000000000001], [1067.0, 784.6666666666666], [1043.0, 547.8214285714286], [1095.0, 459.8888888888889], [1091.0, 461.4090909090909], [1119.0, 1001.0], [1115.0, 391.43548387096774], [1111.0, 778.8780487804881], [1099.0, 845.1304347826086], [1103.0, 629.681818181818], [1139.0, 690.5], [1143.0, 804.5714285714284], [1147.0, 578.9428571428571], [1151.0, 1113.0], [1123.0, 802.5490196078433], [1127.0, 625.9743589743588], [1131.0, 298.59999999999997], [1135.0, 643.4117647058823], [1107.0, 540.5555555555555], [1167.0, 1010.0909090909091], [1155.0, 1126.1136363636363], [1183.0, 650.6666666666667], [1179.0, 936.3636363636363], [1163.0, 676.0], [1159.0, 1125.2], [1215.0, 979.5714285714287], [1211.0, 150.2941176470588], [1207.0, 347.09090909090907], [1203.0, 255.50000000000006], [1187.0, 357.66666666666663], [1191.0, 457.33333333333337], [1195.0, 502.6666666666667], [1199.0, 780.8399999999999], [1171.0, 1200.0], [1175.0, 1154.239130434783], [1223.0, 988.6666666666664], [1247.0, 903.025], [1243.0, 248.18181818181816], [1239.0, 700.9565217391305], [1219.0, 368.5], [1227.0, 625.6666666666667], [1231.0, 645.9499999999999], [1279.0, 631.0769230769231], [1275.0, 763.1578947368423], [1271.0, 352.8076923076922], [1267.0, 257.0], [1251.0, 1074.5], [1255.0, 554.0], [1259.0, 1028.5749999999998], [1263.0, 575.8857142857144], [1235.0, 842.4186046511632], [1291.0, 970.8787878787876], [1303.0, 998.2499999999999], [1307.0, 17.555555555555557], [1287.0, 230.66666666666666], [1283.0, 121.91666666666667], [1311.0, 901.8823529411764], [1295.0, 592.125], [1331.0, 702.9000000000001], [1335.0, 308.69230769230774], [1339.0, 931.3103448275863], [1343.0, 500.8787878787879], [1315.0, 646.4864864864866], [1319.0, 392.16], [1323.0, 221.0], [1327.0, 1049.0540540540544], [1299.0, 770.8181818181819], [1359.0, 836.5576923076922], [1351.0, 493.31249999999994], [1371.0, 787.8888888888888], [1367.0, 475.1153846153844], [1347.0, 1069.4285714285713], [1375.0, 1094.5], [1355.0, 574.4782608695652], [1407.0, 539.047619047619], [1379.0, 807.5], [1403.0, 459.25], [1399.0, 132.5714285714286], [1395.0, 578.1515151515152], [1383.0, 861.2857142857143], [1387.0, 878.0285714285714], [1391.0, 729.9444444444445], [1363.0, 886.2459016393442], [1415.0, 1015.8888888888889], [1439.0, 656.9629629629629], [1435.0, 997.8333333333334], [1431.0, 1078.7764705882353], [1411.0, 1094.9642857142856], [1419.0, 1024.2], [1423.0, 872.1611374407584], [1471.0, 872.3636363636363], [1467.0, 288.7857142857143], [1463.0, 151.25], [1459.0, 228.0], [1443.0, 533.9230769230769], [1447.0, 821.75], [1451.0, 444.49999999999994], [1455.0, 777.0400000000002], [1427.0, 574.3333333333334], [1483.0, 572.153846153846], [1475.0, 740.2666666666665], [1499.0, 1077.85], [1503.0, 424.70000000000005], [1479.0, 1156.1], [1535.0, 928.7857142857143], [1531.0, 1113.25], [1527.0, 1110.6999999999998], [1523.0, 1000.0], [1487.0, 672.6666666666667], [1507.0, 1086.5185185185185], [1515.0, 720.8421052631579], [1511.0, 918.6], [1519.0, 789.8888888888889], [1491.0, 678.5833333333334], [1495.0, 1151.9166666666665], [1547.0, 463.28571428571433], [1543.0, 568.25], [1559.0, 834.6511627906976], [1539.0, 319.6], [1567.0, 778.8125], [1563.0, 749.6666666666665], [1551.0, 800.6666666666666], [1587.0, 1051.8444444444447], [1591.0, 435.0], [1595.0, 384.00000000000006], [1599.0, 749.5454545454546], [1571.0, 1051.8561151079134], [1575.0, 1015.2272727272727], [1579.0, 1140.2173913043478], [1583.0, 959.5833333333334], [1555.0, 777.125], [1607.0, 781.1], [1631.0, 704.4666666666667], [1627.0, 352.7307692307693], [1623.0, 700.9999999999999], [1603.0, 935.0], [1611.0, 659.8], [1615.0, 1011.842105263158], [1663.0, 676.0], [1635.0, 35.0], [1655.0, 528.88], [1651.0, 192.66666666666666], [1659.0, 962.8333333333334], [1639.0, 1093.1200000000001], [1643.0, 842.5166666666665], [1647.0, 595.625], [1619.0, 909.3749999999999], [1671.0, 1055.9411764705883], [1695.0, 973.8333333333334], [1691.0, 941.6176470588235], [1687.0, 800.5714285714286], [1667.0, 955.5394736842104], [1675.0, 786.0833333333334], [1679.0, 406.8536585365854], [1727.0, 776.1851851851852], [1723.0, 638.360759493671], [1719.0, 884.296875], [1715.0, 577.7777777777778], [1699.0, 520.6875], [1703.0, 1076.9999999999998], [1707.0, 982.8412698412699], [1711.0, 904.3000000000001], [1683.0, 377.68749999999994], [1735.0, 669.974358974359], [1759.0, 1035.742857142857], [1755.0, 922.3529411764707], [1751.0, 1001.1428571428571], [1731.0, 574.0], [1739.0, 1064.7500000000002], [1743.0, 1201.8333333333335], [1763.0, 1066.5833333333335], [1787.0, 217.0], [1791.0, 871.7647058823529], [1779.0, 849.3424657534248], [1783.0, 474.3888888888889], [1767.0, 612.1666666666666], [1771.0, 1004.0833333333334], [1775.0, 637.3157894736843], [1747.0, 971.7575757575755], [1799.0, 936.0000000000002], [1795.0, 473.25], [1807.0, 1032.9642857142858], [1803.0, 559.5], [1843.0, 640.8125000000001], [1847.0, 970.2142857142858], [1851.0, 1026.75], [1855.0, 1068.5312499999998], [1811.0, 920.9047619047619], [1815.0, 609.9230769230769], [1819.0, 966.1785714285714], [1827.0, 1092.0952380952383], [1831.0, 897.2857142857142], [1835.0, 1166.7000000000003], [1839.0, 594.6363636363636], [1863.0, 588.7241379310345], [1859.0, 914.5348837209301], [1867.0, 380.75], [1871.0, 688.3181818181818], [1875.0, 806.5806451612906], [1879.0, 1114.7567567567573], [1883.0, 631.6666666666666], [1887.0, 693.0869565217389], [1891.0, 1027.7916666666667], [1915.0, 333.7894736842105], [1919.0, 1023.304347826087], [1907.0, 1061.1538461538462], [1911.0, 1062.4651162790694], [1895.0, 299.79166666666663], [1899.0, 376.28125], [1903.0, 862.1818181818182], [1927.0, 651.7083333333333], [1923.0, 930.32], [1931.0, 867.8095238095237], [1935.0, 1045.80487804878], [1939.0, 646.4390243902438], [1943.0, 950.5645161290323], [1947.0, 626.3478260869568], [1951.0, 834.3421052631577], [1955.0, 765.4], [1983.0, 1141.3809523809523], [1971.0, 1058.8], [1975.0, 1090.2388059701484], [1979.0, 839.8181818181818], [1959.0, 845.5106382978723], [1967.0, 1135.461538461538], [1963.0, 503.9230769230768], [1995.0, 944.2666666666668], [1987.0, 1002.5238095238096], [1991.0, 1046.719298245614], [1999.0, 1021.3750000000001], [2035.0, 768.8], [2039.0, 573.5111111111111], [2043.0, 613.0444444444445], [2047.0, 779.0370370370371], [2003.0, 804.0], [2007.0, 643.0], [2015.0, 1186.4666666666662], [2011.0, 1166.3333333333335], [2019.0, 679.4], [2023.0, 1036.5686274509803], [2027.0, 949.272727272727], [2031.0, 313.40000000000003], [2062.0, 869.0238095238094], [2054.0, 969.4], [2070.0, 891.212121212121], [2078.0, 469.9615384615384], [2086.0, 787.8965517241379], [2094.0, 1113.833333333333], [2102.0, 641.25], [2110.0, 956.5053191489362], [2118.0, 1038.3272727272727], [2126.0, 1172.6521739130433], [2166.0, 1151.9555555555555], [2174.0, 814.1985815602835], [2150.0, 535.6126126126128], [2158.0, 1042.7600000000002], [2134.0, 1041.1212121212122], [2142.0, 635.3777777777777], [2190.0, 1069.7928571428574], [2182.0, 1030.2244897959183], [2198.0, 894.0454545454545], [2206.0, 893.9879518072289], [2222.0, 1008.885714285714], [2214.0, 408.85365853658527], [2230.0, 902.6853146853152], [2238.0, 850.1428571428571], [2246.0, 1071.7999999999997], [2294.0, 1098.5632183908049], [2302.0, 959.931506849315], [2278.0, 1036.1346153846155], [2286.0, 1031.0128205128203], [2254.0, 1065.2727272727273], [2262.0, 994.1978021978025], [2270.0, 1166.0217391304348], [2310.0, 1027.9629629629628], [2318.0, 777.8363636363638], [2326.0, 1182.634146341463], [2334.0, 1052.2090909090907], [2342.0, 706.8], [2063.0, 817.4000000000001], [2055.0, 1077.8636363636367], [2071.0, 983.0819672131145], [2079.0, 476.0], [2087.0, 607.6190476190475], [2095.0, 1117.9558823529414], [2103.0, 1014.0340136054423], [2111.0, 571.857142857143], [2119.0, 883.75], [2167.0, 1034.5087719298247], [2175.0, 1008.5294117647061], [2151.0, 884.9523809523811], [2159.0, 1166.4666666666667], [2127.0, 1073.5], [2135.0, 1131.8994082840236], [2143.0, 584.3684210526317], [2191.0, 1026.695652173913], [2183.0, 992.3250000000002], [2199.0, 247.6511627906977], [2207.0, 988.6260869565214], [2215.0, 384.57142857142856], [2223.0, 1108.2586206896547], [2231.0, 1038.3733333333332], [2239.0, 828.0], [2247.0, 492.0], [2295.0, 1087.6923076923078], [2303.0, 1080.774193548387], [2279.0, 933.4150943396227], [2287.0, 1046.0909090909088], [2255.0, 942.4347826086956], [2263.0, 959.606060606061], [2271.0, 1159.5294117647059], [2311.0, 1051.222222222222], [2319.0, 979.5], [2335.0, 1013.2659574468082], [2343.0, 856.8750000000001], [2327.0, 1202.1], [1.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1538.1277666666613, 776.6397833333301]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2345.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 23741.6, "minX": 1.571217E12, "maxY": 1065295.85, "series": [{"data": [[1.57121706E12, 1065295.85], [1.571217E12, 412639.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57121706E12, 34208.2], [1.571217E12, 23741.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57121706E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 661.4824634349179, "minX": 1.571217E12, "maxY": 836.1529185731996, "series": [{"data": [[1.57121706E12, 836.1529185731996], [1.571217E12, 661.4824634349179]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57121706E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 214.25446363058248, "minX": 1.571217E12, "maxY": 214.3528073413049, "series": [{"data": [[1.57121706E12, 214.3528073413049], [1.571217E12, 214.25446363058248]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57121706E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 633.5327006799367, "minX": 1.571217E12, "maxY": 814.5915261521351, "series": [{"data": [[1.57121706E12, 814.5915261521351], [1.571217E12, 633.5327006799367]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57121706E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.571217E12, "maxY": 1554.0, "series": [{"data": [[1.57121706E12, 1554.0], [1.571217E12, 1542.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57121706E12, 0.0], [1.571217E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57121706E12, 1200.0], [1.571217E12, 1044.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57121706E12, 1374.0], [1.571217E12, 1355.2700000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57121706E12, 1266.0], [1.571217E12, 1209.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57121706E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 16.0, "minX": 207.0, "maxY": 1161.0, "series": [{"data": [[917.0, 39.0], [1082.0, 31.0], [1071.0, 20.0], [1177.0, 34.0], [1162.0, 533.0], [1232.0, 126.0], [1257.0, 522.5], [1457.0, 29.0], [1439.0, 32.0], [1490.0, 536.0], [1522.0, 23.0], [1608.0, 612.0], [1654.0, 650.0], [1696.0, 547.0], [1779.0, 25.0], [1916.0, 617.0], [1889.0, 605.0], [1907.0, 640.5], [1937.0, 58.0], [2005.0, 565.5], [2046.0, 667.5], [2034.0, 592.0], [2015.0, 32.0], [2217.0, 631.0], [2184.0, 569.0], [2207.0, 694.0], [2220.0, 578.0], [2216.0, 531.0], [2393.0, 637.0], [2369.0, 617.5], [2451.0, 628.0], [2560.0, 595.0], [207.0, 16.0], [467.0, 45.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[917.0, 1002.0], [1082.0, 1001.0], [1071.0, 1000.0], [1177.0, 1001.0], [1162.0, 1003.0], [1232.0, 1001.0], [1257.0, 1001.0], [1457.0, 1001.0], [1439.0, 1001.0], [1490.0, 1151.0], [1522.0, 1000.0], [1608.0, 1116.0], [1654.0, 1125.0], [1696.0, 1123.0], [1779.0, 1001.0], [1916.0, 1137.0], [1889.0, 1161.0], [1907.0, 1123.0], [1937.0, 1089.0], [2005.0, 1123.0], [2046.0, 1114.5], [2034.0, 1100.0], [2015.0, 1005.0], [2217.0, 1120.0], [2184.0, 1139.0], [2207.0, 1146.0], [2220.0, 1099.0], [2216.0, 1082.0], [2393.0, 1101.0], [2369.0, 1126.0], [2451.0, 1122.0], [2560.0, 1108.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2560.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 207.0, "maxY": 693.0, "series": [{"data": [[917.0, 38.0], [1082.0, 31.0], [1071.0, 20.0], [1177.0, 34.0], [1162.0, 533.0], [1232.0, 125.5], [1257.0, 522.5], [1457.0, 28.0], [1439.0, 32.0], [1490.0, 536.0], [1522.0, 23.0], [1608.0, 612.0], [1654.0, 650.0], [1696.0, 547.0], [1779.0, 25.0], [1916.0, 617.0], [1889.0, 605.0], [1907.0, 640.5], [1937.0, 58.0], [2005.0, 565.5], [2046.0, 667.5], [2034.0, 592.0], [2015.0, 32.0], [2217.0, 631.0], [2184.0, 569.0], [2207.0, 693.0], [2220.0, 578.0], [2216.0, 531.0], [2393.0, 637.0], [2369.0, 617.5], [2451.0, 628.0], [2560.0, 595.0], [207.0, 16.0], [467.0, 45.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[917.0, 0.0], [1082.0, 0.0], [1071.0, 0.0], [1177.0, 0.0], [1162.0, 0.0], [1232.0, 0.0], [1257.0, 0.0], [1457.0, 0.0], [1439.0, 0.0], [1490.0, 0.0], [1522.0, 0.0], [1608.0, 0.0], [1654.0, 0.0], [1696.0, 0.0], [1779.0, 0.0], [1916.0, 0.0], [1889.0, 0.0], [1907.0, 0.0], [1937.0, 0.0], [2005.0, 0.0], [2046.0, 0.0], [2034.0, 0.0], [2015.0, 0.0], [2217.0, 0.0], [2184.0, 0.0], [2207.0, 0.0], [2220.0, 0.0], [2216.0, 0.0], [2393.0, 0.0], [2369.0, 0.0], [2451.0, 0.0], [2560.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2560.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 371.1333333333333, "minX": 1.571217E12, "maxY": 628.8666666666667, "series": [{"data": [[1.57121706E12, 628.8666666666667], [1.571217E12, 371.1333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57121706E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.45, "minX": 1.571217E12, "maxY": 367.93333333333334, "series": [{"data": [[1.57121706E12, 289.9], [1.571217E12, 201.2]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.57121706E12, 367.93333333333334], [1.571217E12, 139.51666666666668]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.57121706E12, 1.45]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57121706E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 139.51666666666668, "minX": 1.571217E12, "maxY": 369.3833333333333, "series": [{"data": [[1.57121706E12, 289.9], [1.571217E12, 201.2]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.57121706E12, 369.3833333333333], [1.571217E12, 139.51666666666668]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57121706E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 139.51666666666668, "minX": 1.571217E12, "maxY": 369.3833333333333, "series": [{"data": [[1.57121706E12, 289.9], [1.571217E12, 201.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.57121706E12, 369.3833333333333], [1.571217E12, 139.51666666666668]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57121706E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

